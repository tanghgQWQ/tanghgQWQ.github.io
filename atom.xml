<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://tanghg.netlify.app</id>
    <title>tanghgの四维空间</title>
    <updated>2023-09-17T00:41:59.122Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://tanghg.netlify.app"/>
    <link rel="self" href="https://tanghg.netlify.app/atom.xml"/>
    <subtitle>一个小菜OIer的学习笔记</subtitle>
    <logo>https://tanghg.netlify.app/images/avatar.png</logo>
    <icon>https://tanghg.netlify.app/favicon.ico</icon>
    <rights>All rights reserved 2023, tanghgの四维空间</rights>
    <entry>
        <title type="html"><![CDATA[AT_birthday0410_x この問題はほんとうにひどい問題であるため，できれば先に他の問題のほうをお楽しみいただければと思っておりまして，ですので他の問題を通し終えて暇になり，かつその暇を]]></title>
        <id>https://tanghg.netlify.app/post/at_birthday0410_x-konowen-ti-hahontounihidoiwen-ti-dearutamedekirebaxian-nita-nowen-ti-nohouwoole-simiitadakerebatosi-tuteorimasitedesunodeta-nowen-ti-wotong-sizhong-etexia-ninarikatusonoxia-wo/</id>
        <link href="https://tanghg.netlify.app/post/at_birthday0410_x-konowen-ti-hahontounihidoiwen-ti-dearutamedekirebaxian-nita-nowen-ti-nohouwoole-simiitadakerebatosi-tuteorimasitedesunodeta-nowen-ti-wotong-sizhong-etexia-ninarikatusonoxia-wo/">
        </link>
        <updated>2023-08-13T07:55:14.000Z</updated>
        <content type="html"><![CDATA[<p>首先对于这道题，我们的一个大体思路是将表达式还原出来，之后计算的过程就简单了。我会分成几部分来介绍如何实现，顺便介绍一些坑点</p>
<h1 id="降噪">降噪</h1>
<p>通过观察样例，我们会发现这个图上有很多讨厌的小黑点。为了寻找数字的部分，我们首先应该做的就是降噪。具体如何做呢？</p>
<p>我提供两种方法——洪水填充和众数滤波器。</p>
<h2 id="洪水填充">洪水填充</h2>
<p>我们知道，洪水填充可以用来寻找联通块（不会的去<a href="https://www.luogu.com.cn/problem/P1596">P1596</a>）。那么，根据题目给出的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span>（颜色反转概率）并不大来看，可以预想到的是不会出现面积超过 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>100</mn></mrow><annotation encoding="application/x-tex">100</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span></span></span></span> 的联通快，那么洪水填充并将联通块面积小于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>100</mn></mrow><annotation encoding="application/x-tex">100</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span></span></span></span> 的变成白色即可。</p>
<p>但是，如果你采用这种方法可能会在第 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>103</mn></mrow><annotation encoding="application/x-tex">103</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">3</span></span></span></span> 号点 WA 掉。<strong>这是因为虽然噪点不会超过 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>100</mn></mrow><annotation encoding="application/x-tex">100</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span></span></span></span>，但是原本要被识别的运算符或数字可能被割开</strong>。我提供一组 hack(感谢 reveal 大佬指出)：</p>
<pre><code>......#..............#.#.................
.......#..........####................#..
..........######.#....##..........#......
....#.##..........####...................
.....#..#...#..###..#####................
...........#.####.#######.............#..
.....#.#####.####.##.###......#......#...
....#####.#######..###.....#.............
.....####.#######...........##...........
.....##.#####.#...#.....#..............#.
.....#####.................#...#.........
.....#####....#..........................
.....#####...........#............#......
........###......#...............#.......
....#.#####.........#.....#..............
...#..#####.....###.###.###..............
......##......######.##.###..............
.........###########.####.##..........#..
.....#####..#####.#.#######........#.....
.....######.#######.###.##.#.........#.#.
.....######.###.####.#######..........#..
.....##.#######....#.#######.............
......######....#..#.######.##...........
......######............####.............
...#..##.##............#....#........#...
........................##.##............
..#....................#####.#...........
.......................#.#####...........
.........#...#..........######.........#.
...................#...#######...........
.....................#.##.##.##..........
......................##..####......#....
.........#...........##.######......#....
..........#####.#.#####.#####............
.........######.#######.#####..#........#
......#.######...####.#..####.#..........
.......#####.###.######.#................
#......#.######.#####....................
......#.#######.#.#..#.#...........#.....
........#####...........#..............#.
..#......................................
..................................#......
</code></pre>
<p>可以发现 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>5</mn></mrow><annotation encoding="application/x-tex">5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span></span></span></span> 在中间被分割成了两部分，这导致会识别错误。</p>
<p>但洪水填充是有用的，会在接下来说明用途。</p>
<h2 id="众数滤波器">众数滤波器</h2>
<p>这个东西听着高级，实际上就是比较。</p>
<p>对于坐标 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>，我们比较 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 周围 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>8</mn></mrow><annotation encoding="application/x-tex">8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span></span></span></span> 个方向还有自己的黑色点数量与白色点数量。之后黑色点数目多就将<strong>新图片</strong>的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 设为黑色，否则为白色。</p>
<p>这样最多一个数字或运算符的边缘会被削掉，但是整体图片的形状不会受影响。</p>
<p><a href="https://www.luogu.com.cn/paste/aokythoi">众数滤波器代码</a></p>
<h1 id="分离">分离</h1>
<p>经过降噪之后，我们就要去分离了。</p>
<p>这时候洪水填充就派上用场了。我们用洪水填充去确定每一个数字或运算符的范围，并将其分离成多份去分别操作，这样可以使我们将每一个数字或运算符逐一击破。</p>
<p><a href="https://www.luogu.com.cn/paste/vxrj9n6e">分离部分代码</a></p>
<h1 id="变换">变换</h1>
<p>最难的部分要来了。对于本题的匹配，可以发现从原图尝试复原到标准字体不太现实，因为会丢失很多信息也不太好写。我们不如反过来。因为题目给出了变换规则，所以我们不妨随机一些参数来尝试从标准字体来还原。</p>
<p>所以我们根据题目模拟即可。</p>
<p><a href="https://www.luogu.com.cn/paste/c9yuz8wp">变换部分代码</a></p>
<h1 id="匹配率">匹配率</h1>
<p>现在我们有了两个图像，一个是由标准变来的，一个是待匹配的。我们现在需要比对了。</p>
<p>在比对之前，我们要先将两个图像居中，<strong>这样才不会出现一个3经过旋转到了左上角但分离出来的居中的情况</strong>。</p>
<p>之后就比对即可。匹配率用 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mtext>两个图像相同的坐标个数</mtext><mrow><mn>65</mn><mo>∗</mo><mn>38</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\text{两个图像相同的坐标个数}}{65*38}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span><span class="mord mtight">5</span><span class="mbin mtight">∗</span><span class="mord mtight">3</span><span class="mord mtight">8</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord cjk_fallback mtight">两个图像相同的坐标个数</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 即可。为了统一都将图片变成 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>65</mn><mo>×</mo><mn>38</mn></mrow><annotation encoding="application/x-tex">65\times 38</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">6</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">8</span></span></span></span> 的格式。</p>
<p><a href="https://www.luogu.com.cn/paste/cklo753m">匹配部分代码</a></p>
<h1 id="训练查找">训练+查找</h1>
<p>之后我们设定一个 <code>train_time</code> 来表示随机的次数，次数越高准确率越高。但是 TLE 的可能也就越大。我这里默认的是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>270</mn></mrow><annotation encoding="application/x-tex">270</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">7</span><span class="mord">0</span></span></span></span> 次，但是测试点编号大于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>89</mn></mrow><annotation encoding="application/x-tex">89</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span><span class="mord">9</span></span></span></span> 的我改成了 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>143</mn></mrow><annotation encoding="application/x-tex">143</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">4</span><span class="mord">3</span></span></span></span>，保证准确率。具体的可以根据你程序的常数来决定。</p>
<p>之后对于每一次随机，做 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>16</mn></mrow><annotation encoding="application/x-tex">16</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">6</span></span></span></span> 次随机变换。从范围生成参数然后变换出图片。之后<strong>将每一次变换的图片都存下来</strong>。这也是一个优化的技巧。因为变换是有一个复杂度的，提前收集下来可以为了之后查找的效率快一点。不需要每一次都重新生成。</p>
<p>之后匹配就把每一张图片跟现在的待查找图片去求匹配率，然后将匹配率最高的字符设定为当前的字符。</p>
<p><a href="https://www.luogu.com.cn/paste/k5e5sqlx">训练+查找代码</a></p>
<h1 id="总代码">总代码</h1>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
#include &lt;random&gt;

#define Operator O
using namespace std;
typedef long long ll;
const ll MAXH = 65 + 5;
const ll MAXW = 9000 + 5;
const double pi = 3.1415926535;
ll train_time = 270;

double radian(double d) {
    return d / 180.0 * pi;
}

struct image {
    ll x, y;
    string s[MAXH];

    image() {
        x = 0, y = 0;
    }

    image(ll _x, ll _y) :
            x(_x),
            y(_y) {
        for (int i = 1; i &lt;= x; ++i) {
            s[i] = &quot; &quot;;
            for (int j = 1; j &lt;= y; ++j) {
                s[i] += '.';
            }
        }
    }
};

vector&lt;image&gt; ex;
image Operator[20];

image change_middle(image im) {
    image New(65, 38);
    ll mx = im.x, my = im.y;
    ll px = (65 - mx) / 2, py = (38 - my) / 2;
    for (int i = 1; i &lt;= im.x; ++i) {
        for (int j = 1; j &lt;= im.y; ++j) {
            if (i + px &lt;= 65 &amp;&amp; i + px &gt;= 1 &amp;&amp; j + py &lt;= 38 &amp;&amp; j + py &gt;= 1) {
                New.s[i + px][j + py] = im.s[i][j];
            }
        }
    }
    return New;
}

namespace Init {
    image input;
    bool vis[MAXH][MAXW];

    struct separate_information {
        ll min_x = 1e18, max_x = -1e18, min_y = 1e18, max_y = -1e18;

        void Return() {
            min_x = 1e18, max_x = -1e18, min_y = 1e18, max_y = -1e18;
        }

        void turn(ll x, ll y) {
            min_x = min(min_x, x);
            max_x = max(max_x, x);
            min_y = min(min_y, y);
            max_y = max(max_y, y);
        }

        bool operator&lt;(const separate_information &amp;K) const {
            return min_y &lt; K.min_y;
        }
    } Si[1000];

    ll cc = 1;
    ll val;
    ll dx[] = {0, 0, 1, -1, 1, -1, 1, -1};
    ll dy[] = {1, -1, 0, 0, -1, 1, 1, -1};

    void flood_fill(ll x, ll y, bool del) {
        if (del) {
            input.s[x][y] = '.';
        } else {
            Si[cc].turn(x, y);
            vis[x][y] = true;
            val++;
        }
        for (int i = 0; i &lt; 8; ++i) {
            ll X = x + dx[i], Y = y + dy[i];
            if (X &lt; 1 || X &gt; input.x || Y &lt; 1 || Y &gt; input.y || (vis[X][Y] &amp;&amp; !del) || input.s[X][Y] == '.') {
                continue;
            }
            flood_fill(X, Y, del);
        }
    }

    vector&lt;image&gt; clean() {
        cc = 1;
        memset(vis, false, sizeof(vis));
        image New(input.x, input.y);
        for (int i = 1; i &lt;= input.x; ++i) {
            for (int j = 1; j &lt;= input.y; ++j) {
                ll bn = 0, wn = 0;
                if (input.s[i][j] == '#') {
                    bn = 1;
                } else {
                    wn = 1;
                }
                for (int k = 0; k &lt; 8; ++k) {
                    ll X = i + dx[k], Y = j + dy[k];
                    if (X &lt; 1 || X &gt; input.x || Y &lt; 1 || Y &gt; input.y) {
                        continue;
                    }
                    if (input.s[X][Y] == '#') {
                        bn++;
                    } else {
                        wn++;
                    }
                }
                if (bn &gt; wn) {
                    New.s[i][j] = '#';
                } else {
                    New.s[i][j] = '.';
                }
            }
        }
        input = New;
        for (int i = 1; i &lt;= input.x; ++i) {
            for (int j = 1; j &lt;= input.y; ++j) {
                if (input.s[i][j] == '#' &amp;&amp; !vis[i][j]) {
                    val = 0;
                    Si[cc].Return();
                    flood_fill(i, j, false);
                    if (val &lt; 50) {
                        flood_fill(i, j, true);
                        continue;
                    }
                    cc++;
                }
            }
        }
        vector&lt;image&gt; SI;
        sort(Si + 1, Si + cc);
        for (int i = 1; i &lt; cc; ++i) {
            separate_information si = Si[i];
            image each(si.max_x - si.min_x + 1, si.max_y - si.min_y + 1);
            ll sz = 1;
            for (int k = si.min_x; k &lt;= si.max_x; ++k) {
                each.s[sz] = &quot; &quot;;
                for (int l = si.min_y; l &lt;= si.max_y; ++l) {
                    each.s[sz] += input.s[k][l];
                }
                ++sz;
            }
            SI.push_back(each);
        }
        return SI;
    }

    void init() {
        O[0].x = 39, O[0].y = 30, O[0].s[1] = &quot; ...........########...........&quot;, O[0].s[2] = &quot; .........############.........&quot;, O[0].s[3] = &quot; .......################.......&quot;, O[0].s[4] = &quot; ......##################......&quot;, O[0].s[5] = &quot; .....####################.....&quot;, O[0].s[6] = &quot; ....######################....&quot;, O[0].s[7] = &quot; ...########################...&quot;, O[0].s[8] = &quot; ...##########....##########...&quot;, O[0].s[9] = &quot; ..#########........#########..&quot;, O[0].s[10] = &quot; ..########..........########..&quot;, O[0].s[11] = &quot; .#########..........#########.&quot;, O[0].s[12] = &quot; .########............########.&quot;, O[0].s[13] = &quot; .########............########.&quot;, O[0].s[14] = &quot; .########............########.&quot;, O[0].s[15] = &quot; ########..............########&quot;, O[0].s[16] = &quot; ########..............########&quot;, O[0].s[17] = &quot; ########..............########&quot;, O[0].s[18] = &quot; ########..............########&quot;, O[0].s[19] = &quot; ########..............########&quot;, O[0].s[20] = &quot; ########..............########&quot;, O[0].s[21] = &quot; ########..............########&quot;, O[0].s[22] = &quot; ########..............########&quot;, O[0].s[23] = &quot; ########..............########&quot;, O[0].s[24] = &quot; ########..............########&quot;, O[0].s[25] = &quot; ########..............########&quot;, O[0].s[26] = &quot; .########............########.&quot;, O[0].s[27] = &quot; .########............########.&quot;, O[0].s[28] = &quot; .########............########.&quot;, O[0].s[29] = &quot; .#########..........#########.&quot;, O[0].s[30] = &quot; ..########..........########..&quot;, O[0].s[31] = &quot; ..#########........#########..&quot;, O[0].s[32] = &quot; ...##########....##########...&quot;, O[0].s[33] = &quot; ...########################...&quot;, O[0].s[34] = &quot; ....######################....&quot;, O[0].s[35] = &quot; .....####################.....&quot;, O[0].s[36] = &quot; ......##################......&quot;, O[0].s[37] = &quot; .......################.......&quot;, O[0].s[38] = &quot; .........############.........&quot;, O[0].s[39] = &quot; ...........########...........&quot;;
        O[1].x = 38, O[1].y = 27, O[1].s[1] = &quot; .............####..........&quot;, O[1].s[2] = &quot; ...........#######.........&quot;, O[1].s[3] = &quot; ........##########.........&quot;, O[1].s[4] = &quot; .....#############.........&quot;, O[1].s[5] = &quot; ..################.........&quot;, O[1].s[6] = &quot; .#################.........&quot;, O[1].s[7] = &quot; .#################.........&quot;, O[1].s[8] = &quot; .#################.........&quot;, O[1].s[9] = &quot; .#################.........&quot;, O[1].s[10] = &quot; ..######..########.........&quot;, O[1].s[11] = &quot; ..###.....########.........&quot;, O[1].s[12] = &quot; ..........########.........&quot;, O[1].s[13] = &quot; ..........########.........&quot;, O[1].s[14] = &quot; ..........########.........&quot;, O[1].s[15] = &quot; ..........########.........&quot;, O[1].s[16] = &quot; ..........########.........&quot;, O[1].s[17] = &quot; ..........########.........&quot;, O[1].s[18] = &quot; ..........########.........&quot;, O[1].s[19] = &quot; ..........########.........&quot;, O[1].s[20] = &quot; ..........########.........&quot;, O[1].s[21] = &quot; ..........########.........&quot;, O[1].s[22] = &quot; ..........########.........&quot;, O[1].s[23] = &quot; ..........########.........&quot;, O[1].s[24] = &quot; ..........########.........&quot;, O[1].s[25] = &quot; ..........########.........&quot;, O[1].s[26] = &quot; ..........########.........&quot;, O[1].s[27] = &quot; ..........########.........&quot;, O[1].s[28] = &quot; ..........########.........&quot;, O[1].s[29] = &quot; ..........########.........&quot;, O[1].s[30] = &quot; ..........########.........&quot;, O[1].s[31] = &quot; ..........########.........&quot;, O[1].s[32] = &quot; ..........########.........&quot;, O[1].s[33] = &quot; .##########################&quot;, O[1].s[34] = &quot; ###########################&quot;, O[1].s[35] = &quot; ###########################&quot;, O[1].s[36] = &quot; ###########################&quot;, O[1].s[37] = &quot; ###########################&quot;, O[1].s[38] = &quot; .##########################&quot;;
        O[2].x = 38, O[2].y = 28, O[2].s[1] = &quot; .........#########..........&quot;, O[2].s[2] = &quot; ......##############........&quot;, O[2].s[3] = &quot; ...###################......&quot;, O[2].s[4] = &quot; ..#####################.....&quot;, O[2].s[5] = &quot; .#######################....&quot;, O[2].s[6] = &quot; .#######################....&quot;, O[2].s[7] = &quot; .########################...&quot;, O[2].s[8] = &quot; .#########......#########...&quot;, O[2].s[9] = &quot; .#######.........#########..&quot;, O[2].s[10] = &quot; .#######..........########..&quot;, O[2].s[11] = &quot; .#######..........########..&quot;, O[2].s[12] = &quot; .#######..........########..&quot;, O[2].s[13] = &quot; .#######..........########..&quot;, O[2].s[14] = &quot; ..######..........########..&quot;, O[2].s[15] = &quot; .................#########..&quot;, O[2].s[16] = &quot; .................########...&quot;, O[2].s[17] = &quot; ................#########...&quot;, O[2].s[18] = &quot; ...............##########...&quot;, O[2].s[19] = &quot; ..............##########....&quot;, O[2].s[20] = &quot; .............###########....&quot;, O[2].s[21] = &quot; ............###########.....&quot;, O[2].s[22] = &quot; ...........###########......&quot;, O[2].s[23] = &quot; ..........###########.......&quot;, O[2].s[24] = &quot; .........###########........&quot;, O[2].s[25] = &quot; ........###########.........&quot;, O[2].s[26] = &quot; .......###########..........&quot;, O[2].s[27] = &quot; ......###########.....#####.&quot;, O[2].s[28] = &quot; .....###########.....#######&quot;, O[2].s[29] = &quot; ....###########......#######&quot;, O[2].s[30] = &quot; ...###########.......#######&quot;, O[2].s[31] = &quot; ..###########........#######&quot;, O[2].s[32] = &quot; .###########.........#######&quot;, O[2].s[33] = &quot; ############################&quot;, O[2].s[34] = &quot; ############################&quot;, O[2].s[35] = &quot; ############################&quot;, O[2].s[36] = &quot; ############################&quot;, O[2].s[37] = &quot; ############################&quot;, O[2].s[38] = &quot; .###########################&quot;;
        O[3].x = 39, O[3].y = 28, O[3].s[1] = &quot; .........##########.........&quot;, O[3].s[2] = &quot; .....################.......&quot;, O[3].s[3] = &quot; ...####################.....&quot;, O[3].s[4] = &quot; ..######################....&quot;, O[3].s[5] = &quot; ..#######################...&quot;, O[3].s[6] = &quot; ..########################..&quot;, O[3].s[7] = &quot; ..########################..&quot;, O[3].s[8] = &quot; ..########.......##########.&quot;, O[3].s[9] = &quot; ..#######.........#########.&quot;, O[3].s[10] = &quot; ..#######..........########.&quot;, O[3].s[11] = &quot; ..#######..........########.&quot;, O[3].s[12] = &quot; ...######..........########.&quot;, O[3].s[13] = &quot; ...................########.&quot;, O[3].s[14] = &quot; ...................########.&quot;, O[3].s[15] = &quot; ..................########..&quot;, O[3].s[16] = &quot; .................#########..&quot;, O[3].s[17] = &quot; ..........###############...&quot;, O[3].s[18] = &quot; .........###############....&quot;, O[3].s[19] = &quot; .........##############.....&quot;, O[3].s[20] = &quot; .........###############....&quot;, O[3].s[21] = &quot; .........################...&quot;, O[3].s[22] = &quot; ..........################..&quot;, O[3].s[23] = &quot; .................##########.&quot;, O[3].s[24] = &quot; ...................########.&quot;, O[3].s[25] = &quot; ...................#########&quot;, O[3].s[26] = &quot; ....................########&quot;, O[3].s[27] = &quot; ....................########&quot;, O[3].s[28] = &quot; ....................########&quot;, O[3].s[29] = &quot; ....................########&quot;, O[3].s[30] = &quot; ...................#########&quot;, O[3].s[31] = &quot; ..###.............##########&quot;, O[3].s[32] = &quot; .########........##########.&quot;, O[3].s[33] = &quot; .##########################.&quot;, O[3].s[34] = &quot; .#########################..&quot;, O[3].s[35] = &quot; ##########################..&quot;, O[3].s[36] = &quot; .########################...&quot;, O[3].s[37] = &quot; .######################.....&quot;, O[3].s[38] = &quot; ....#################.......&quot;, O[3].s[39] = &quot; .......###########..........&quot;;
        O[4].x = 38, O[4].y = 30, O[4].s[1] = &quot; .................#####........&quot;, O[4].s[2] = &quot; ................#######.......&quot;, O[4].s[3] = &quot; ...............########.......&quot;, O[4].s[4] = &quot; ..............#########.......&quot;, O[4].s[5] = &quot; .............##########.......&quot;, O[4].s[6] = &quot; ............###########.......&quot;, O[4].s[7] = &quot; ............###########.......&quot;, O[4].s[8] = &quot; ...........############.......&quot;, O[4].s[9] = &quot; ..........#############.......&quot;, O[4].s[10] = &quot; .........##############.......&quot;, O[4].s[11] = &quot; ........###############.......&quot;, O[4].s[12] = &quot; .......################.......&quot;, O[4].s[13] = &quot; .......########.#######.......&quot;, O[4].s[14] = &quot; ......########..#######.......&quot;, O[4].s[15] = &quot; .....########...#######.......&quot;, O[4].s[16] = &quot; ....########....#######.......&quot;, O[4].s[17] = &quot; ...#########....#######.......&quot;, O[4].s[18] = &quot; ...########.....#######.......&quot;, O[4].s[19] = &quot; ..########......#######.......&quot;, O[4].s[20] = &quot; .########.......#######.......&quot;, O[4].s[21] = &quot; ##############################&quot;, O[4].s[22] = &quot; ##############################&quot;, O[4].s[23] = &quot; ##############################&quot;, O[4].s[24] = &quot; ##############################&quot;, O[4].s[25] = &quot; ##############################&quot;, O[4].s[26] = &quot; ##############################&quot;, O[4].s[27] = &quot; ...............########.......&quot;, O[4].s[28] = &quot; ...............########.......&quot;, O[4].s[29] = &quot; ...............########.......&quot;, O[4].s[30] = &quot; ...............########.......&quot;, O[4].s[31] = &quot; ...............########.......&quot;, O[4].s[32] = &quot; ...............########.......&quot;, O[4].s[33] = &quot; .........####################.&quot;, O[4].s[34] = &quot; ........#####################.&quot;, O[4].s[35] = &quot; ........#####################.&quot;, O[4].s[36] = &quot; ........#####################.&quot;, O[4].s[37] = &quot; ........#####################.&quot;, O[4].s[38] = &quot; .........####################.&quot;;
        O[5].x = 38, O[5].y = 28, O[5].s[1] = &quot; ...######################...&quot;, O[5].s[2] = &quot; ...#######################..&quot;, O[5].s[3] = &quot; ...#######################..&quot;, O[5].s[4] = &quot; ...#######################..&quot;, O[5].s[5] = &quot; ...#######################..&quot;, O[5].s[6] = &quot; ...######################...&quot;, O[5].s[7] = &quot; ...#######..................&quot;, O[5].s[8] = &quot; ...#######..................&quot;, O[5].s[9] = &quot; ...#######..................&quot;, O[5].s[10] = &quot; ...#######..................&quot;, O[5].s[11] = &quot; ...#######..................&quot;, O[5].s[12] = &quot; ...#######..................&quot;, O[5].s[13] = &quot; ..########..########........&quot;, O[5].s[14] = &quot; ..####################......&quot;, O[5].s[15] = &quot; ..######################....&quot;, O[5].s[16] = &quot; ..#######################...&quot;, O[5].s[17] = &quot; ..########################..&quot;, O[5].s[18] = &quot; ..########################..&quot;, O[5].s[19] = &quot; ..#########################.&quot;, O[5].s[20] = &quot; ..########.......##########.&quot;, O[5].s[21] = &quot; .....##...........#########.&quot;, O[5].s[22] = &quot; ...................#########&quot;, O[5].s[23] = &quot; ....................########&quot;, O[5].s[24] = &quot; ....................########&quot;, O[5].s[25] = &quot; ....................########&quot;, O[5].s[26] = &quot; ....................########&quot;, O[5].s[27] = &quot; ....................########&quot;, O[5].s[28] = &quot; ....................########&quot;, O[5].s[29] = &quot; ...#...............#########&quot;, O[5].s[30] = &quot; ..####............#########.&quot;, O[5].s[31] = &quot; .########.......###########.&quot;, O[5].s[32] = &quot; .##########################.&quot;, O[5].s[33] = &quot; .#########################..&quot;, O[5].s[34] = &quot; #########################...&quot;, O[5].s[35] = &quot; .#######################....&quot;, O[5].s[36] = &quot; ..#####################.....&quot;, O[5].s[37] = &quot; ....#################.......&quot;, O[5].s[38] = &quot; ........##########..........&quot;;
        O[6].x = 39, O[6].y = 29, O[6].s[1] = &quot; ....................######...&quot;, O[6].s[2] = &quot; ...............###########...&quot;, O[6].s[3] = &quot; ............###############..&quot;, O[6].s[4] = &quot; ..........#################..&quot;, O[6].s[5] = &quot; ........###################..&quot;, O[6].s[6] = &quot; .......####################..&quot;, O[6].s[7] = &quot; ......####################...&quot;, O[6].s[8] = &quot; .....################........&quot;, O[6].s[9] = &quot; ....############.............&quot;, O[6].s[10] = &quot; ...###########...............&quot;, O[6].s[11] = &quot; ...#########.................&quot;, O[6].s[12] = &quot; ..#########..................&quot;, O[6].s[13] = &quot; ..########...................&quot;, O[6].s[14] = &quot; .########....................&quot;, O[6].s[15] = &quot; .########....................&quot;, O[6].s[16] = &quot; .#######....########.........&quot;, O[6].s[17] = &quot; .#######..#############......&quot;, O[6].s[18] = &quot; #########################....&quot;, O[6].s[19] = &quot; ##########################...&quot;, O[6].s[20] = &quot; ###########################..&quot;, O[6].s[21] = &quot; ###########################..&quot;, O[6].s[22] = &quot; ############......##########.&quot;, O[6].s[23] = &quot; ##########.........#########.&quot;, O[6].s[24] = &quot; #########...........#########&quot;, O[6].s[25] = &quot; ########.............########&quot;, O[6].s[26] = &quot; ########.............########&quot;, O[6].s[27] = &quot; ########.............########&quot;, O[6].s[28] = &quot; .#######.............########&quot;, O[6].s[29] = &quot; .#######.............########&quot;, O[6].s[30] = &quot; .########...........#########&quot;, O[6].s[31] = &quot; .#########.........#########.&quot;, O[6].s[32] = &quot; ..##########.....###########.&quot;, O[6].s[33] = &quot; ...#########################.&quot;, O[6].s[34] = &quot; ...########################..&quot;, O[6].s[35] = &quot; ....######################...&quot;, O[6].s[36] = &quot; .....####################....&quot;, O[6].s[37] = &quot; ......##################.....&quot;, O[6].s[38] = &quot; ........##############.......&quot;, O[6].s[39] = &quot; ...........########..........&quot;;
        O[7].x = 38, O[7].y = 28, O[7].s[1] = &quot; ###########################.&quot;, O[7].s[2] = &quot; ############################&quot;, O[7].s[3] = &quot; ############################&quot;, O[7].s[4] = &quot; ############################&quot;, O[7].s[5] = &quot; ############################&quot;, O[7].s[6] = &quot; ###########################.&quot;, O[7].s[7] = &quot; #######...........#########.&quot;, O[7].s[8] = &quot; #######...........#########.&quot;, O[7].s[9] = &quot; #######..........#########..&quot;, O[7].s[10] = &quot; #######..........#########..&quot;, O[7].s[11] = &quot; #######..........########...&quot;, O[7].s[12] = &quot; #######.........#########...&quot;, O[7].s[13] = &quot; #######.........########....&quot;, O[7].s[14] = &quot; #######........#########....&quot;, O[7].s[15] = &quot; .#####.........#########....&quot;, O[7].s[16] = &quot; ...............########.....&quot;, O[7].s[17] = &quot; ..............#########.....&quot;, O[7].s[18] = &quot; ..............########......&quot;, O[7].s[19] = &quot; .............#########......&quot;, O[7].s[20] = &quot; .............########.......&quot;, O[7].s[21] = &quot; ............#########.......&quot;, O[7].s[22] = &quot; ............#########.......&quot;, O[7].s[23] = &quot; ............########........&quot;, O[7].s[24] = &quot; ...........#########........&quot;, O[7].s[25] = &quot; ...........########.........&quot;, O[7].s[26] = &quot; ..........#########.........&quot;, O[7].s[27] = &quot; ..........########..........&quot;, O[7].s[28] = &quot; ..........########..........&quot;, O[7].s[29] = &quot; .........########...........&quot;, O[7].s[30] = &quot; .........########...........&quot;, O[7].s[31] = &quot; ........#########...........&quot;, O[7].s[32] = &quot; ........########............&quot;, O[7].s[33] = &quot; ........########............&quot;, O[7].s[34] = &quot; .......########.............&quot;, O[7].s[35] = &quot; .......########.............&quot;, O[7].s[36] = &quot; .......#######..............&quot;, O[7].s[37] = &quot; .......#######..............&quot;, O[7].s[38] = &quot; .........#####..............&quot;;
        O[8].x = 39, O[8].y = 28, O[8].s[1] = &quot; ..........#########.........&quot;, O[8].s[2] = &quot; ........#############.......&quot;, O[8].s[3] = &quot; ......#################.....&quot;, O[8].s[4] = &quot; .....###################....&quot;, O[8].s[5] = &quot; ....#####################...&quot;, O[8].s[6] = &quot; ...#######################..&quot;, O[8].s[7] = &quot; ...#######################..&quot;, O[8].s[8] = &quot; ...#########.....#########..&quot;, O[8].s[9] = &quot; ..#########.......#########.&quot;, O[8].s[10] = &quot; ..########.........########.&quot;, O[8].s[11] = &quot; ..########.........########.&quot;, O[8].s[12] = &quot; ..########.........########.&quot;, O[8].s[13] = &quot; ..########.........########.&quot;, O[8].s[14] = &quot; ..########.........########.&quot;, O[8].s[15] = &quot; ...########.......########..&quot;, O[8].s[16] = &quot; ...#########.....#########..&quot;, O[8].s[17] = &quot; ....#####################...&quot;, O[8].s[18] = &quot; .....###################....&quot;, O[8].s[19] = &quot; ......#################.....&quot;, O[8].s[20] = &quot; ......#################.....&quot;, O[8].s[21] = &quot; ....#####################...&quot;, O[8].s[22] = &quot; ...#######################..&quot;, O[8].s[23] = &quot; ..#########......##########.&quot;, O[8].s[24] = &quot; .########..........########.&quot;, O[8].s[25] = &quot; .########..........#########&quot;, O[8].s[26] = &quot; ########............########&quot;, O[8].s[27] = &quot; ########............########&quot;, O[8].s[28] = &quot; ########............########&quot;, O[8].s[29] = &quot; ########............########&quot;, O[8].s[30] = &quot; #########..........#########&quot;, O[8].s[31] = &quot; #########..........#########&quot;, O[8].s[32] = &quot; .##########......##########.&quot;, O[8].s[33] = &quot; .##########################.&quot;, O[8].s[34] = &quot; ..########################..&quot;, O[8].s[35] = &quot; ..########################..&quot;, O[8].s[36] = &quot; ...######################...&quot;, O[8].s[37] = &quot; ....####################....&quot;, O[8].s[38] = &quot; ......################......&quot;, O[8].s[39] = &quot; .........##########.........&quot;;
        O[9].x = 39, O[9].y = 28, O[9].s[1] = &quot; .........#########..........&quot;, O[9].s[2] = &quot; .......#############........&quot;, O[9].s[3] = &quot; .....#################......&quot;, O[9].s[4] = &quot; ....###################.....&quot;, O[9].s[5] = &quot; ...#####################....&quot;, O[9].s[6] = &quot; ..#######################...&quot;, O[9].s[7] = &quot; .########################...&quot;, O[9].s[8] = &quot; .##########......#########..&quot;, O[9].s[9] = &quot; .#########........#########.&quot;, O[9].s[10] = &quot; #########..........########.&quot;, O[9].s[11] = &quot; ########............#######.&quot;, O[9].s[12] = &quot; ########............#######.&quot;, O[9].s[13] = &quot; ########............########&quot;, O[9].s[14] = &quot; ########............########&quot;, O[9].s[15] = &quot; ########............########&quot;, O[9].s[16] = &quot; #########..........#########&quot;, O[9].s[17] = &quot; .########.........##########&quot;, O[9].s[18] = &quot; .##########......###########&quot;, O[9].s[19] = &quot; ..##########################&quot;, O[9].s[20] = &quot; ..##########################&quot;, O[9].s[21] = &quot; ...#########################&quot;, O[9].s[22] = &quot; ....########################&quot;, O[9].s[23] = &quot; ......############..########&quot;, O[9].s[24] = &quot; ........########....#######.&quot;, O[9].s[25] = &quot; ....................#######.&quot;, O[9].s[26] = &quot; ...................########.&quot;, O[9].s[27] = &quot; ...................########.&quot;, O[9].s[28] = &quot; ..................########..&quot;, O[9].s[29] = &quot; .................#########..&quot;, O[9].s[30] = &quot; ...............##########...&quot;, O[9].s[31] = &quot; .............############...&quot;, O[9].s[32] = &quot; .........###############....&quot;, O[9].s[33] = &quot; ....###################.....&quot;, O[9].s[34] = &quot; ...###################......&quot;, O[9].s[35] = &quot; ...##################.......&quot;, O[9].s[36] = &quot; ...################.........&quot;, O[9].s[37] = &quot; ...##############...........&quot;, O[9].s[38] = &quot; ...############.............&quot;, O[9].s[39] = &quot; ....######..................&quot;;
        O[10].x = 54, O[10].y = 21, O[10].s[1] = &quot; ..####...............&quot;, O[10].s[2] = &quot; .######..............&quot;, O[10].s[3] = &quot; #########............&quot;, O[10].s[4] = &quot; ##########...........&quot;, O[10].s[5] = &quot; ###########..........&quot;, O[10].s[6] = &quot; ############.........&quot;, O[10].s[7] = &quot; .############........&quot;, O[10].s[8] = &quot; ...###########.......&quot;, O[10].s[9] = &quot; ....###########......&quot;, O[10].s[10] = &quot; .....##########......&quot;, O[10].s[11] = &quot; ......##########.....&quot;, O[10].s[12] = &quot; .......##########....&quot;, O[10].s[13] = &quot; ........#########....&quot;, O[10].s[14] = &quot; .........#########...&quot;, O[10].s[15] = &quot; ..........########...&quot;, O[10].s[16] = &quot; ..........#########..&quot;, O[10].s[17] = &quot; ...........########..&quot;, O[10].s[18] = &quot; ...........#########.&quot;, O[10].s[19] = &quot; ............########.&quot;, O[10].s[20] = &quot; ............########.&quot;, O[10].s[21] = &quot; ............########.&quot;, O[10].s[22] = &quot; ............#########&quot;, O[10].s[23] = &quot; .............########&quot;, O[10].s[24] = &quot; .............########&quot;, O[10].s[25] = &quot; .............########&quot;, O[10].s[26] = &quot; .............########&quot;, O[10].s[27] = &quot; .............########&quot;, O[10].s[28] = &quot; .............########&quot;, O[10].s[29] = &quot; .............########&quot;, O[10].s[30] = &quot; .............########&quot;, O[10].s[31] = &quot; .............########&quot;, O[10].s[32] = &quot; .............########&quot;, O[10].s[33] = &quot; ............########.&quot;, O[10].s[34] = &quot; ............########.&quot;, O[10].s[35] = &quot; ............########.&quot;, O[10].s[36] = &quot; ...........#########.&quot;, O[10].s[37] = &quot; ...........########..&quot;, O[10].s[38] = &quot; ..........#########..&quot;, O[10].s[39] = &quot; ..........#########..&quot;, O[10].s[40] = &quot; .........#########...&quot;, O[10].s[41] = &quot; ........##########...&quot;, O[10].s[42] = &quot; .......##########....&quot;, O[10].s[43] = &quot; .......#########.....&quot;, O[10].s[44] = &quot; .....###########.....&quot;, O[10].s[45] = &quot; ....###########......&quot;, O[10].s[46] = &quot; ...###########.......&quot;, O[10].s[47] = &quot; ..###########........&quot;, O[10].s[48] = &quot; ############.........&quot;, O[10].s[49] = &quot; ###########..........&quot;, O[10].s[50] = &quot; ##########...........&quot;, O[10].s[51] = &quot; #########............&quot;, O[10].s[52] = &quot; .#######.............&quot;, O[10].s[53] = &quot; ..####...............&quot;, O[10].s[54] = &quot; ...#.................&quot;;
        O[11].x = 51, O[11].y = 28, O[11].s[1] = &quot; ......................####..&quot;, O[11].s[2] = &quot; ......................######&quot;, O[11].s[3] = &quot; .....................#######&quot;, O[11].s[4] = &quot; .....................#######&quot;, O[11].s[5] = &quot; ....................########&quot;, O[11].s[6] = &quot; ....................#######.&quot;, O[11].s[7] = &quot; ...................########.&quot;, O[11].s[8] = &quot; ...................#######..&quot;, O[11].s[9] = &quot; ..................########..&quot;, O[11].s[10] = &quot; ..................#######...&quot;, O[11].s[11] = &quot; .................########...&quot;, O[11].s[12] = &quot; .................#######....&quot;, O[11].s[13] = &quot; ................########....&quot;, O[11].s[14] = &quot; ................########....&quot;, O[11].s[15] = &quot; ................#######.....&quot;, O[11].s[16] = &quot; ...............########.....&quot;, O[11].s[17] = &quot; ...............#######......&quot;, O[11].s[18] = &quot; ..............########......&quot;, O[11].s[19] = &quot; ..............#######.......&quot;, O[11].s[20] = &quot; .............########.......&quot;, O[11].s[21] = &quot; .............#######........&quot;, O[11].s[22] = &quot; ............########........&quot;, O[11].s[23] = &quot; ............#######.........&quot;, O[11].s[24] = &quot; ...........########.........&quot;, O[11].s[25] = &quot; ...........#######..........&quot;, O[11].s[26] = &quot; ..........########..........&quot;, O[11].s[27] = &quot; ..........#######...........&quot;, O[11].s[28] = &quot; ..........#######...........&quot;, O[11].s[29] = &quot; .........########...........&quot;, O[11].s[30] = &quot; .........#######............&quot;, O[11].s[31] = &quot; ........########............&quot;, O[11].s[32] = &quot; ........#######.............&quot;, O[11].s[33] = &quot; .......########.............&quot;, O[11].s[34] = &quot; .......#######..............&quot;, O[11].s[35] = &quot; ......########..............&quot;, O[11].s[36] = &quot; ......#######...............&quot;, O[11].s[37] = &quot; .....########...............&quot;, O[11].s[38] = &quot; .....#######................&quot;, O[11].s[39] = &quot; ....########................&quot;, O[11].s[40] = &quot; ....#######.................&quot;, O[11].s[41] = &quot; ...########.................&quot;, O[11].s[42] = &quot; ...########.................&quot;, O[11].s[43] = &quot; ...#######..................&quot;, O[11].s[44] = &quot; ..########..................&quot;, O[11].s[45] = &quot; ..#######...................&quot;, O[11].s[46] = &quot; .########...................&quot;, O[11].s[47] = &quot; .#######....................&quot;, O[11].s[48] = &quot; ########....................&quot;, O[11].s[49] = &quot; #######.....................&quot;, O[11].s[50] = &quot; .######.....................&quot;, O[11].s[51] = &quot; ..#####.....................&quot;;
        O[12].x = 7, O[12].y = 28, O[12].s[1] = &quot; .##########################.&quot;, O[12].s[2] = &quot; ############################&quot;, O[12].s[3] = &quot; ############################&quot;, O[12].s[4] = &quot; ############################&quot;, O[12].s[5] = &quot; ############################&quot;, O[12].s[6] = &quot; ############################&quot;, O[12].s[7] = &quot; .###########################&quot;;
        O[13].x = 54, O[13].y = 21, O[13].s[1] = &quot; ...............####..&quot;, O[13].s[2] = &quot; ..............######.&quot;, O[13].s[3] = &quot; ............########.&quot;, O[13].s[4] = &quot; ...........##########&quot;, O[13].s[5] = &quot; ..........###########&quot;, O[13].s[6] = &quot; .........############&quot;, O[13].s[7] = &quot; ........############.&quot;, O[13].s[8] = &quot; .......###########...&quot;, O[13].s[9] = &quot; ......###########....&quot;, O[13].s[10] = &quot; .....###########.....&quot;, O[13].s[11] = &quot; .....##########......&quot;, O[13].s[12] = &quot; ....##########.......&quot;, O[13].s[13] = &quot; ....#########........&quot;, O[13].s[14] = &quot; ...#########.........&quot;, O[13].s[15] = &quot; ...########..........&quot;, O[13].s[16] = &quot; ..#########..........&quot;, O[13].s[17] = &quot; ..########...........&quot;, O[13].s[18] = &quot; .#########...........&quot;, O[13].s[19] = &quot; .########............&quot;, O[13].s[20] = &quot; .########............&quot;, O[13].s[21] = &quot; .########............&quot;, O[13].s[22] = &quot; #########............&quot;, O[13].s[23] = &quot; ########.............&quot;, O[13].s[24] = &quot; ########.............&quot;, O[13].s[25] = &quot; ########.............&quot;, O[13].s[26] = &quot; ########.............&quot;, O[13].s[27] = &quot; ########.............&quot;, O[13].s[28] = &quot; ########.............&quot;, O[13].s[29] = &quot; ########.............&quot;, O[13].s[30] = &quot; ########.............&quot;, O[13].s[31] = &quot; ########.............&quot;, O[13].s[32] = &quot; ########.............&quot;, O[13].s[33] = &quot; .########............&quot;, O[13].s[34] = &quot; .########............&quot;, O[13].s[35] = &quot; .########............&quot;, O[13].s[36] = &quot; .#########...........&quot;, O[13].s[37] = &quot; ..########...........&quot;, O[13].s[38] = &quot; ..#########..........&quot;, O[13].s[39] = &quot; ..#########..........&quot;, O[13].s[40] = &quot; ...#########.........&quot;, O[13].s[41] = &quot; ...##########........&quot;, O[13].s[42] = &quot; ....#########........&quot;, O[13].s[43] = &quot; .....#########.......&quot;, O[13].s[44] = &quot; .....##########......&quot;, O[13].s[45] = &quot; ......###########....&quot;, O[13].s[46] = &quot; .......###########...&quot;, O[13].s[47] = &quot; ........###########..&quot;, O[13].s[48] = &quot; .........############&quot;, O[13].s[49] = &quot; ..........###########&quot;, O[13].s[50] = &quot; ...........##########&quot;, O[13].s[51] = &quot; ............#########&quot;, O[13].s[52] = &quot; .............#######.&quot;, O[13].s[53] = &quot; ...............####..&quot;, O[13].s[54] = &quot; .................#...&quot;;
        O[14].x = 28, O[14].y = 27, O[14].s[1] = &quot; ...........#####...........&quot;, O[14].s[2] = &quot; ..........#######..........&quot;, O[14].s[3] = &quot; ..........#######..........&quot;, O[14].s[4] = &quot; ..........#######..........&quot;, O[14].s[5] = &quot; ..........#######..........&quot;, O[14].s[6] = &quot; ..........#######..........&quot;, O[14].s[7] = &quot; ..........#######..........&quot;, O[14].s[8] = &quot; ..........#######..........&quot;, O[14].s[9] = &quot; ..........#######..........&quot;, O[14].s[10] = &quot; ..........#######..........&quot;, O[14].s[11] = &quot; ###########################&quot;, O[14].s[12] = &quot; ###########################&quot;, O[14].s[13] = &quot; ###########################&quot;, O[14].s[14] = &quot; ###########################&quot;, O[14].s[15] = &quot; ###########################&quot;, O[14].s[16] = &quot; ###########################&quot;, O[14].s[17] = &quot; ###########################&quot;, O[14].s[18] = &quot; ..........#######..........&quot;, O[14].s[19] = &quot; ..........#######..........&quot;, O[14].s[20] = &quot; ..........#######..........&quot;, O[14].s[21] = &quot; ..........#######..........&quot;, O[14].s[22] = &quot; ..........#######..........&quot;, O[14].s[23] = &quot; ..........#######..........&quot;, O[14].s[24] = &quot; ..........#######..........&quot;, O[14].s[25] = &quot; ..........#######..........&quot;, O[14].s[26] = &quot; ..........#######..........&quot;, O[14].s[27] = &quot; ..........#######..........&quot;, O[14].s[28] = &quot; ...........#####...........&quot;;
        O[15].x = 26, O[15].y = 26, O[15].s[1] = &quot; ...........####...........&quot;, O[15].s[2] = &quot; ..........######..........&quot;, O[15].s[3] = &quot; ..........#######.........&quot;, O[15].s[4] = &quot; .........########.........&quot;, O[15].s[5] = &quot; .........########.........&quot;, O[15].s[6] = &quot; ..........#######.........&quot;, O[15].s[7] = &quot; ..........######..........&quot;, O[15].s[8] = &quot; .#####....######.....####.&quot;, O[15].s[9] = &quot; .######...######...#######&quot;, O[15].s[10] = &quot; #########..#####.#########&quot;, O[15].s[11] = &quot; ###############.##########&quot;, O[15].s[12] = &quot; ##########################&quot;, O[15].s[13] = &quot; ##########################&quot;, O[15].s[14] = &quot; .########################.&quot;, O[15].s[15] = &quot; ......##############......&quot;, O[15].s[16] = &quot; .........########.........&quot;, O[15].s[17] = &quot; ........###########.......&quot;, O[15].s[18] = &quot; .......#############......&quot;, O[15].s[19] = &quot; .....########.#######.....&quot;, O[15].s[20] = &quot; ....########..########....&quot;, O[15].s[21] = &quot; ....########..#########...&quot;, O[15].s[22] = &quot; ...########....########...&quot;, O[15].s[23] = &quot; ...########....########...&quot;, O[15].s[24] = &quot; ....#######.....#######...&quot;, O[15].s[25] = &quot; .....#####......######....&quot;, O[15].s[26] = &quot; ......###.........##......&quot;;
        for (int i = 0; i &lt; 16; ++i) {
            Operator[i] = change_middle(Operator[i]);
        }
        ll t;
        scanf(&quot;%lld&quot;, &amp;t);
        if (t &gt;= 90) {
            train_time = 143;
        }
        scanf(&quot;%lld%lld&quot;, &amp;input.y, &amp;input.x);
        for (int i = 1; i &lt;= 65; ++i) {
            cin &gt;&gt; input.s[i];
            input.s[i] = &quot; &quot; + input.s[i];
        }
    }
}
using Init::clean;


image change(image query, double M, double M_h, double M_w, double R, double S_x, double S_y) {
    image New(65, 38);
    double Cos = cos(radian(R)), Sin = sin(radian(R));
    for (int i = 1; i &lt;= query.x; ++i) {
        for (int j = 1; j &lt;= query.y; ++j) {
            if (query.s[i][j] == '#') {
                double x = i + 0.5 - 32.5, y = j + 0.5 - 19;
                x *= M * M_w;
                y *= M * M_h;
                double spin_x = x * Cos - y * Sin;
                double spin_y = x * Sin + y * Cos;
                x = spin_x + S_y * spin_y;
                y = spin_y + S_x * spin_x;
                x = floor(x + 32);
                y = floor(y + 18.5);
                ll X = x, Y = y;
                if (X &gt;= 1 &amp;&amp; X &lt;= 65 &amp;&amp; Y &gt;= 1 &amp;&amp; Y &lt;= 38) {
                    New.s[X][Y] = '#';
                }
            }
        }
    }
    Init::input = change_middle(New);
    vector&lt;image&gt; EX = clean();
    return change_middle(EX[0]);
}

double same(image query, image simple) {
    ll val = 0;
    for (int i = 1; i &lt;= 65; ++i) {
        for (int j = 1; j &lt;= 38; ++j) {
            val += (query.s[i][j] == simple.s[i][j]);
        }
    }
    return val * 1.0 / 2470;
}


image random_image[5000 + 5][20];

void Train() {
    random_device rd;
    mt19937 random_seed(rd());
    uniform_real_distribution&lt;&gt; rm(0.9, 1), rr(-15, 15), rs(-0.1, 0.1);
    for (int i = 0; i &lt; train_time; ++i) {
        for (int j = 0; j &lt; 16; ++j) {
            double M = rm(random_seed);
            double M_h = rm(random_seed), M_w = rm(random_seed);
            double R = rr(random_seed);
            double S_x = rs(random_seed), S_y = rs(random_seed);
            random_image[i][j] = change(Operator[j], M, M_h, M_w, R, S_x, S_y);
        }
    }
}

char to(image im, char c) {
    char ac[] = &quot;0123456789)/-(+*&quot;;
    im = change_middle(im);
    double fit_rate = 0;
    ll id;
    for (int i = 0; i &lt; train_time; ++i) {
        for (int j = 0; j &lt; 16; ++j) {
            if (c == '+' || c == '-' || c == '*' || c == '/' || c == '(') {
                if (ac[j] == '+' || ac[j] == '-' || ac[j] == '*' || ac[j] == '/' || ac[j] == ')') {
                    continue;
                }
            }
            if (isdigit(c)) {
                if (isdigit(ac[j]) || ac[j] == '(') {
                    continue;
                }
            }
            if (c == ')') {
                if (ac[j] == '(' || isdigit(ac[j])) {
                    continue;
                }
            }
            if (c == '(' &amp;&amp; ac[j] == ')') {
                continue;
            }
            double new_fit_rate = same(random_image[i][j], im);
            if (new_fit_rate &gt; fit_rate) {
                fit_rate = new_fit_rate;
                id = j;
            }
        }
    }
    return ac[id];
}

namespace Calc {
    stack &lt;ll&gt; num;
    stack&lt;char&gt; op;

    ll g(char a) {
        if (a == '+' || a == '-') {
            return 1;
        } else if (a == '*' || a == '/') {
            return 2;
        }
        return 0;
    }

    void Do() {
        ll a, b, c;
        char o = op.top();
        op.pop();
        a = num.top();
        num.pop();
        b = num.top();
        num.pop();
        if (o == '+') {
            c = a + b;
        } else if (o == '-') {
            c = b - a;
        } else if (o == '*') {
            c = a * b;
        } else {
            c = b / a;
        }
        num.push(c);
    }

    ll Ans(string expression) {
        for (int i = 0; i &lt; expression.size(); ++i) {
            char c = expression[i];
            if (isdigit(c)) {
                num.push(c - '0');
            } else if (c == '(') {
                op.push(c);
            } else if (c == ')') {
                while (op.top() != '(') {
                    Do();
                }
                op.pop();
            } else {
                while (!op.empty() &amp;&amp; g(op.top()) &gt;= g(c)) {
                    Do();
                }
                op.push(c);
            }
        }
        while (!op.empty()) {
            Do();
        }
        return num.top();
    }
}
using Calc::Ans;

int main() {
    Init::init();
    ex = clean();
    string expression = &quot;&quot;;
    Train();
    char c = ' ';
    for (auto i: ex) {
        c = to(i, c);
        expression += c;
    }
    printf(&quot;%lld\n&quot;, Ans(expression));
    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ABC308F]]></title>
        <id>https://tanghg.netlify.app/post/abc308f/</id>
        <link href="https://tanghg.netlify.app/post/abc308f/">
        </link>
        <updated>2023-07-05T22:51:13.000Z</updated>
        <content type="html"><![CDATA[<h1 id="题目大意">题目大意</h1>
<p>有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span> 个要买的商品，第 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 个商品的原价是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">P_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p>
<p>有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span> 张优惠券，第 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 张优惠券需要满 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">L_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 减 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">D_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p>
<p>一个物品最多只能使用一张优惠券，每一张优惠券最多使用一次。</p>
<p>问最小花费。</p>
<h1 id="思路">思路</h1>
<p>首先因为每一个物品都必须买，所以问题就转化成了如何让这个总价格降价最多。</p>
<p>考虑贪心。</p>
<p>因为每一个物品最多只能使用一张优惠券，所以肯定要先用 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span> 最大的。在 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span> 相同时先用 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span></span></span></span> 小的。因为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span></span></span></span> 小的能用的券就少。所以能给后面更大范围的更多机会。</p>
<p>之后我们把 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span> 按照价格从小到大排一个序。之后从第一个优惠券开始向后枚举。二分价格最小的能用的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span>。然后只要能用就将所有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span> 的总和减去当前的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span></span></span></span>。</p>
<p>还有一个要注意的点是<strong>一个物品最多只能使用一张优惠券</strong>，所以在用完一张券的时候就要把对应的物品删除掉。</p>
<h1 id="代码">代码</h1>
<pre><code class="language-cpp">#include &lt;iostream&gt;
#include &lt;algorithm&gt;
#include &lt;set&gt;
#include &lt;map&gt;
using namespace std;
typedef long long ll;
const ll MAXN=2e5+5;
ll n,m;
struct node{
    ll l,d;
    bool operator&lt;(const node&amp;K)const{
        if(d!=K.d){
            return d&gt;K.d;
        }
        return l&lt;K.l;
    }
}c[MAXN];
ll ans;
map&lt;ll,ll&gt;ma;
int main() {
    scanf(&quot;%lld%lld&quot;,&amp;n,&amp;m);
    set&lt;ll&gt;p;
    for (int i = 1; i &lt;=n ; ++i) {
        ll P;
        scanf(&quot;%lld&quot;,&amp;P);
        ma[P]++;
        ans+=P;
        p.insert(P);
    }
    for (int i = 1; i &lt;=m ; ++i) {
        scanf(&quot;%lld&quot;,&amp;c[i].l);
    }
    for (int i = 1; i &lt;=m ; ++i) {
        scanf(&quot;%lld&quot;,&amp;c[i].d);
    }
    sort(c+1,c+m+1);
    for (int i = 1; i &lt;=m ; ++i) {
        auto index=p.lower_bound(c[i].l);//lower_bound 代表第一个&lt;=查找数的指针。
        if(index==p.end()){
            continue;//如果是空集就代表这张券不能用。
        }
        ans-=c[i].d;
        ma[*index]--;
        if(ma[*index]==0){
            p.erase(index);
        }
    }
    printf(&quot;%lld\n&quot;,ans);
    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[T278583 最长不降子序列]]></title>
        <id>https://tanghg.netlify.app/post/t278583-zui-chang-bu-jiang-zi-xu-lie/</id>
        <link href="https://tanghg.netlify.app/post/t278583-zui-chang-bu-jiang-zi-xu-lie/">
        </link>
        <updated>2023-06-25T10:11:45.000Z</updated>
        <content type="html"><![CDATA[<h1 id="题目大意">题目大意</h1>
<p>初始有一个空序列，现对于这个序列做若干操作。操作有两种类型：</p>
<ul>
<li>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>d</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">add</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">d</span></span></span></span>操作：在序列末尾加上一个非负整数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span></p>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mi>a</mi><mi>c</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">back</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>操作：给出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>，回到<strong>现有的</strong>第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>次<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>d</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">add</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">d</span></span></span></span>操作之后的版本，并且将第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>次<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>d</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">add</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">d</span></span></span></span>操作之后的版本<strong>全部删除</strong>。</p>
</li>
</ul>
<p>给出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>，表示操作的总次数，请在每一次操作后，输出当前版本序列的最长不降子序列的长度。</p>
<p>对于全部测试点，保证<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>≤</mo><mn>5</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup><mo separator="true">,</mo><msub><mi>x</mi><mi>i</mi></msub><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>7</mn></msup></mrow><annotation encoding="application/x-tex">n\leq 5\times 10^5,x_i \le 10^7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span></span></span></span>，且对于每一次<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mi>a</mi><mi>c</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">back</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>操作有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>≤</mo></mrow><annotation encoding="application/x-tex">x_i \le</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7859700000000001em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span></span></span></span> 当前序列长度。</p>
<h1 id="思路">思路</h1>
<p>首先我们可以分析单纯的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>d</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">add</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">d</span></span></span></span>  操作的做法。也就是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><msub><mi>log</mi><mo>⁡</mo><mn>2</mn></msub><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n\log_2 n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span> 的时间复杂度。比较简单不在复述。之后我们考虑加上第二个操作。</p>
<p>首先我们用一个<code>use</code>变量来代表当前是第几个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>d</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">add</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">d</span></span></span></span>  操作。之后，如果有一个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mi>a</mi><mi>c</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">back</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 肯定就是让<code>use</code> 回到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span> 了。然后考虑怎么弄值。我们如果开一个数组 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>n</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">ans</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">s</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>n</mi><mi>s</mi><mo>[</mo><mi>i</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">ans[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">s</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span></span></span></span> 为在第 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>d</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">add</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">d</span></span></span></span>  操作时的答案。那么每一次只要输出 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>n</mi><mi>s</mi><mo>[</mo><mi>u</mi><mi>s</mi><mi>e</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">ans[use]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">s</span><span class="mopen">[</span><span class="mord mathdefault">u</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mclose">]</span></span></span></span>  即可。但是有一个很头疼的是<strong>将第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>次<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>d</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">add</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">d</span></span></span></span>操作之后的版本全部删除</strong>。那我们考虑一下怎么实现。首先删除操作就正常遍历所有大于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span> 的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>d</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">add</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">d</span></span></span></span> 操作。之后，如果不删除的话就可能会出现用二分的那个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">dp</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span></span></span></span>  最优值不存在了。那么直接更换为上一个没有被更换的值即可。</p>
<h1 id="代码">代码</h1>
<pre><code class="language-cpp">#include &lt;iostream&gt;
#include &lt;algorithm&gt;
#include &lt;cstring&gt;
#include &lt;stack&gt;

using namespace std;
typedef long long ll;
const ll MAXN = 5e5 + 5;
ll use;
ll dp[MAXN];
ll ans[MAXN];
ll n;
stack&lt;ll&gt; add;
ll p[MAXN], Dp[MAXN];

int main() {
    scanf(&quot;%lld&quot;, &amp;n);
    memset(dp, 0x3f, sizeof(dp));
    dp[0] = 0;
    while (n--) {
        ll op, x;
        scanf(&quot;%lld%lld&quot;, &amp;op, &amp;x);
        if (op == 0) {
            use++;
            add.push(use);
            ans[use] = ans[use - 1];
            if (x &gt;= dp[ans[use]]) {
                dp[++ans[use]] = x;
                p[use] = ans[use];
                Dp[use] = 0x3f3f3f3f3f;
            } else {
                ll num = upper_bound(dp + 1, dp + ans[use], x) - dp;
                Dp[use] = dp[num];
                dp[num] = x;
                p[use] = num;
            }
        } else {
            while (!add.empty() &amp;&amp; add.top() &gt; x) {
                dp[p[add.top()]] = Dp[use];
                add.pop();
                use--;
            }
        }
        printf(&quot;%lld\n&quot;, ans[use]);
    }
    return 0;
}
</code></pre>
<h1 id="总结">总结</h1>
<p>本题实际上是使用了迭代的方式去想题。首先想最基本的情况。然后不断添加元素使得问题一步一步变得复杂与接近原题。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[T267961 序列整理]]></title>
        <id>https://tanghg.netlify.app/post/t267961-xu-lie-zheng-li/</id>
        <link href="https://tanghg.netlify.app/post/t267961-xu-lie-zheng-li/">
        </link>
        <updated>2023-06-07T00:09:35.000Z</updated>
        <content type="html"><![CDATA[<h1 id="题目大意">题目大意</h1>
<p>给定一个长度为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span> 的整数序列 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>3</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>a</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">a_1, a_2, a_3, \ldots, a_N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。现在，请你将这个序列整理为一个非降序列，并输出最小的总成本。</p>
<p>序列整理的方法非常简单。每次你可以选择序列的某个元素，将它移动到指定位置，而你所需要付出的成本就是这个元素的数值。</p>
<p>例如，对于序列 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>7</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>10</mn></mrow><annotation encoding="application/x-tex">7, 1, 2, 3, 1, 10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">7</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">0</span></span></span></span>。我们可以将 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>7</mn></mrow><annotation encoding="application/x-tex">7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span></span></span></span> 移动到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>10</mn></mrow><annotation encoding="application/x-tex">10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span></span></span></span> 之前，并将第二个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 移到序列开头，此时总成本是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>7</mn><mo>+</mo><mn>1</mn><mo>=</mo><mn>8</mn></mrow><annotation encoding="application/x-tex">7+1=8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span></span></span></span>。但如果先将 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">1, 2, 3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span></span></span></span> 移到序列开头，再将第二个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 移到序列开头，那么总成本就只需要 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>+</mo><mn>2</mn><mo>+</mo><mn>3</mn><mo>+</mo><mn>1</mn><mo>=</mo><mn>7</mn></mrow><annotation encoding="application/x-tex">1+2+3+1=7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span></span></span></span>，少于前一个方案。</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>500</mn></mrow><annotation encoding="application/x-tex">2 \le N \le 500</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord">0</span><span class="mord">0</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn><mo>≤</mo><msub><mi>a</mi><mi>i</mi></msub><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>100</mn></msup></mrow><annotation encoding="application/x-tex">0 \le a_i \le 10^{100}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7859700000000001em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span></span>。</p>
<h1 id="思路">思路</h1>
<p>首先，我们先观察，之后发现如果要让一个元素到达自己的位置，只有两个可能。自己挪或者把前面不符合规定的全挪走。也就只有动与不动两种情况。</p>
<p>那我们先想一想动的情况吧。越想越会发现动的情况并不好考虑。这是因为它们的分布不均匀一个元素不是很好去判断能不能动。那我们考虑不动的情况。</p>
<p>之后，如果不动也就能发现所有<strong>不动的元素自己成一个非降子序列！</strong> 这就好办了。我们就正常求和最大的非降子序列即可。最后用总和减去这个和就是动的也就是答案。</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>p</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>=</mo><mi>d</mi><mi>p</mi><mo>[</mo><mi>j</mi><mo>]</mo><mo>+</mo><mi>a</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>(</mo><mi>a</mi><mo>[</mo><mi>j</mi><mo>]</mo><mo>≤</mo><mi>a</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">dp[i]=dp[j]+a[i](a[j]\leq a[i])
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mclose">)</span></span></span></span></span></p>
<p>注意要用高精度</p>
<h1 id="代码">代码</h1>
<pre><code class="language-cpp">#include &lt;iostream&gt;

using namespace std;
typedef long long ll;
const ll MAXN = 500 + 5;

string add(string na, string nb) {
    long long A[1000] = {0}, B[1000] = {0}, ans[1000] = {0};
    ll l = max(na.length(), nb.length());
    for (ll i = na.length() - 1, j = 1; i &gt;= 0; i--, j++) {
        A[j] = na[i] - '0';
    }
    for (ll i = nb.length() - 1, j = 1; i &gt;= 0; i--, j++) {
        B[j] = nb[i] - '0';
    }
    for (ll i = 1; i &lt;= l; ++i) {
        ans[i] += A[i] + B[i];
        ans[i + 1] = ans[i] / 10;
        ans[i] %= 10;
    }
    if (ans[l + 1] != 0) {
        l++;
    }
    string z = &quot;&quot;;
    for (ll i = l; i &gt;= 1; --i) {
        z += ans[i] + '0';
    }
    return z;
}

string sub(string na, string nb) {
    long long A[1000] = {0}, B[1000] = {0}, ans[1000] = {0};
    ll l = max(na.length(), nb.length());
    for (ll i = na.length() - 1, j = 1; i &gt;= 0; i--, j++) {
        A[j] = na[i] - '0';
    }
    for (ll i = nb.length() - 1, j = 1; i &gt;= 0; i--, j++) {
        B[j] = nb[i] - '0';
    }
    for (ll i = 1; i &lt;= l; ++i) {
        if (A[i] &lt; B[i]) {
            A[i + 1] -= 1;
            A[i] += 10;
        }
        ans[i] = A[i] - B[i];
    }
    while ((ans[l] == 0) &amp;&amp; l &gt; 1) {
        l--;
    }
    string z = &quot;&quot;;
    for (ll i = l; i &gt;= 1; --i) {
        z += ans[i] + '0';
    }
    return z;
}

bool bigger(string na, string nb) {
    if (na == nb) {
        return true;
    }
    if (na.size() &lt; nb.size()) {
        return false;
    }
    if (na.size() &gt; nb.size()) {
        return true;
    }
    return na &gt; nb;
}

bool smaller(string na, string nb) {
    if (na == nb) {
        return true;
    }
    if (na.size() &gt; nb.size()) {
        return false;
    }
    if (na.size() &lt; nb.size()) {
        return true;
    }
    return na &lt; nb;
}

string a[MAXN], dp[MAXN];
ll n;

int main() {
    scanf(&quot;%lld&quot;, &amp;n);
    string sum = &quot;0&quot;;
    for (int i = 1; i &lt;= n; ++i) {
        cin &gt;&gt; a[i];
        sum = add(sum, a[i]);
    }
    for (int i = 1; i &lt;= n; ++i) {
        dp[i] = a[i];
        for (int j = 1; j &lt; i; ++j) {
            if (smaller(a[j], a[i])) {
                string K = add(dp[j], a[i]);
                if (bigger(K, dp[i])) {
                    dp[i] = K;
                }
            }
        }
    }
    string Ans = sum;
    for (int i = 1; i &lt;= n; ++i) {
        string K = sub(sum, dp[i]);
        if (smaller(K, Ans)) {
            Ans = K;
        }
    }
    cout &lt;&lt; Ans &lt;&lt; endl;
    return 0;
}
</code></pre>
<h1 id="总结">总结</h1>
<p>本题告诉我们要多尝试一些路。如果一个路怎么走都走不通时就要换一条路想一想了。本题的关键点就在于从不动的角度切入，一旦切入本题就变得轻而易举了。要先分析究竟是在求什么，如果别的路径最终也能走到这里也要考虑去走。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[T333933 幅度]]></title>
        <id>https://tanghg.netlify.app/post/t333933-fu-du/</id>
        <link href="https://tanghg.netlify.app/post/t333933-fu-du/">
        </link>
        <updated>2023-05-30T12:56:33.000Z</updated>
        <content type="html"><![CDATA[<h1 id="题目大意">题目大意</h1>
<p>给定长度 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span> 的整数序列 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>{</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>a</mi><mi>N</mi></msub><mo>}</mo></mrow><annotation encoding="application/x-tex">A\{a_1, a_2, \ldots, a_N\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>，定义它的<strong>幅度</strong> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo>(</mo><mi>A</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">R(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span></span></span></span> 为：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo>(</mo><mi>A</mi><mo>)</mo><mo>=</mo><munder><mi>max</mi><mo>⁡</mo><mrow><mn>1</mn><mo>≤</mo><mi>i</mi><mo>&lt;</mo><mi>n</mi></mrow></munder><mi mathvariant="normal">∣</mi><msub><mi>a</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>−</mo><msub><mi>a</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">R(A) = \max \limits_{1 \le i \lt n}|a_{i+1} - a_i|
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.572843em;vertical-align:-0.822843em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.43055999999999994em;"><span style="top:-2.072336em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">≤</span><span class="mord mathdefault mtight">i</span><span class="mrel mtight">&lt;</span><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.822843em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span></span></p>
<p>现在，你可以选择<strong>至多</strong> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span></span> 个元素，并将他们改为任意整数。不同的元素，可以修改为不同的数值。</p>
<p>请计算，当你完成修改之后，序列的幅度最小是多少。</p>
<p>对于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>100</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">100\%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">%</span></span></span></span> 的数据，保证 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>≤</mo><mi>K</mi><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>2000</mn></mrow><annotation encoding="application/x-tex">1 ≤ K ≤ N ≤ 2000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><msub><mi>a</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">|a_i| ≤ 10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span>。</p>
<h1 id="思路">思路</h1>
<p>首先，我们发现如果幅度变得越小则修改也越复杂和困难，那么我们可以在这样的情况下考虑能不能二分最大幅度。</p>
<p>那么我们二分后也就是要去尝试能不能构造出一个新序列 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span> 让 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo>(</mo><mi>B</mi><mo>)</mo><mo>&lt;</mo><mo>=</mo><mtext>二分的幅度</mtext></mrow><annotation encoding="application/x-tex">R(B)&lt;=\text{二分的幅度}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord text"><span class="mord cjk_fallback">二分的幅度</span></span></span></span></span>  同时修改操作 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≤</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">\leq k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>。</p>
<p>在之后这样的构造序列问题我们可以考虑 LIS，本质上就是从上一个满足一些条件的数转移到现在来同时接上。</p>
<p>那么本题的状态只有两个，改成某个值与不改。</p>
<p>但是如果我们考虑去 dp 前者会发现改成具体的某个值是需要枚举的，然后 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><msub><mi>a</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">|a_i|\leq 10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span> 明显炸掉。那么考虑枚举后者。</p>
<p>也就是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>p</mi><mo>[</mo><mi>i</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">dp[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span></span></span></span> 表示以 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 这个数不选的子序列的最小操作数。 那么，我们从之前的数里去枚举，之后发现对于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">i,j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>，这两个数之间的拼接后中间的最大幅度可以算。是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⌈</mo><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>a</mi><mi>i</mi></msub><mo>−</mo><msub><mi>a</mi><mi>j</mi></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi>i</mi><mo>−</mo><mi>j</mi></mrow></mfrac><mo>⌉</mo></mrow><annotation encoding="application/x-tex">\lceil \frac{|a_i-a_j|}{i-j}\rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.5134279999999998em;vertical-align:-0.481108em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.03232em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.50732em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span><span class="mord mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌉</span></span></span></span>，为什么是  <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo>−</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">i-j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span> 呢，因为虽然改的数只有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo>−</mo><mi>j</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i-j-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 个，但是幅度有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo>−</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">i-j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span> 个。我们这个公式算的是幅度，所以要关心幅度。然后幅度要向上取整是因为这就是最小值了往下一点点都不行有要求改到最小整数所以只能改到向上取整了。 之后考虑 LIS 即可。</p>
<h1 id="代码">代码</h1>
<pre><code class="language-cpp">#include &lt;iostream&gt;
#include &lt;cmath&gt;

using namespace std;
typedef long long ll;
const ll MAXN = 2005;
ll n, k, dp[MAXN], a[MAXN];

bool check(ll x) {
    for (int i = 1; i &lt;= n; ++i) {
        dp[i] = i - 1;
        for (int j = 1; j &lt; i; ++j) {
            if (ceil(abs(a[i] - a[j]) * 1.0 / (i - j)) &lt;= x) {
                dp[i] = min(dp[i], dp[j] + (i - j - 1));
            }
        }
        if (dp[i] + n - i &lt;= k) {
            return true;
        }
    }
    return false;
}

int main() {
    scanf(&quot;%lld%lld&quot;, &amp;n, &amp;k);
    for (int i = 1; i &lt;= n; ++i) {
        scanf(&quot;%lld&quot;, &amp;a[i]);
    }
    ll l = 0, r = 0;
    for (int i = 1; i &lt; n; ++i) {
        r = max(r, abs(a[i] - a[i + 1]));
    }
    ll ans = 0;
    while (l &lt;= r) {
        ll mid = (l + r) &gt;&gt; 1;
        if (check(mid)) {
            ans = mid;
            r = mid - 1;
        } else {
            l = mid + 1;
        }
    }
    cout &lt;&lt; ans &lt;&lt; endl;
    return 0;
}
</code></pre>
<h1 id="总结">总结</h1>
<p>再之后的二分可以考虑是不是一个数有没有单调性，感性就是一个数增大/减少要求就更困难/容易。</p>
<p>还有以后的序列类问题同时不要求构造的第一个就要想到 LIS，然后考虑怎么去转移。用选择那道题的思路。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[T333673 选择]]></title>
        <id>https://tanghg.netlify.app/post/t333673-xuan-ze/</id>
        <link href="https://tanghg.netlify.app/post/t333673-xuan-ze/">
        </link>
        <updated>2023-05-30T12:39:32.000Z</updated>
        <content type="html"><![CDATA[<h1 id="题目大意">题目大意</h1>
<p>给定 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span> 个区间，编号 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>∼</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">1 \sim N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>。这些区间有各自的价值与费用。其中，区间 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 的左右端点坐标分别为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>l</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">l_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>r</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">r_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，长度为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>r</mi><mi>i</mi></msub><mo>−</mo><msub><mi>l</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">r_i - l_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，价值为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，费用为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p>
<p>现在，你要从这些区间中选出一些区间，使得它们的总长恰好为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span></span></span></span>，并且两两之间没有重叠（重叠部分长度为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>）。</p>
<p>求最大总价值。</p>
<p>对于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>100</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">100\%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">%</span></span></span></span> 的测试数据，保证 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>10000</mn></mrow><annotation encoding="application/x-tex">1 \le N \le 10000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>≤</mo><mi>L</mi><mo>≤</mo><mn>1000</mn></mrow><annotation encoding="application/x-tex">1 ≤ L ≤ 1000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn><mo>≤</mo><mi>M</mi><mo>≤</mo><mn>1000</mn></mrow><annotation encoding="application/x-tex">0 \le M \le 1000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn><mo>≤</mo><msub><mi>l</mi><mi>i</mi></msub><mo>&lt;</mo><msub><mi>r</mi><mi>i</mi></msub><mo>≤</mo><mi>L</mi></mrow><annotation encoding="application/x-tex">0 \le l_i &lt; r_i \le L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7859700000000001em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn><mo>≤</mo><msub><mi>w</mi><mi>i</mi></msub><mo>≤</mo><mn>1000</mn></mrow><annotation encoding="application/x-tex">0 \le w_i \le 1000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7859700000000001em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn><mo>≤</mo><msub><mi>v</mi><mi>i</mi></msub><mo>≤</mo><mn>1000000</mn></mrow><annotation encoding="application/x-tex">0 \le v_i\le 1000000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7859700000000001em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span></span></span></span>。</p>
<h1 id="思路">思路</h1>
<p>这道题的关键点在于数据范围。由于选择的区间要求不重叠且数据范围的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mo separator="true">,</mo><mi>r</mi></mrow><annotation encoding="application/x-tex">l,r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span> 在 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi></mrow><annotation encoding="application/x-tex">l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span> 之内，<strong>那么如果有解必然覆盖整个数轴，也就是区间首尾相连。</strong> 最后对于有解的问题就转换成了删除不符合条件的问题。</p>
<p>之后能看出肯定是背包问题。我们去考虑怎么背包。首先，dp 要做的事就是寻找两个不同东西之间的联系。本题唯一的东西就是区间了，那我们想一想怎么去考虑这一点。</p>
<p>本题的关系就是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>p</mi><mo>[</mo><mi>i</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">dp[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span></span></span></span> 了，但是我们发现光一个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 很明显是不够的，然后根据之前的结论，我们可以用现在覆盖的范围 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>[</mo><mn>0</mn><mo separator="true">,</mo><mi>j</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">[0,j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span> 作为另外一个维度。这是因为我们总是需要看看重不重叠的。再然后，发现本题还有一个限制 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>，那么再定义一维表示不超过 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 的花费。</p>
<p>然后我们发现刚开始的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 就可以省略了。之后考虑转移。</p>
<p>那么我们记录一下每一个数结尾的地方。然后对于现在覆盖范围 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>，从每一个以 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 结尾的地方进行转移。设这个区间为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>，则从 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>p</mi><mo>[</mo><mi>i</mi><mo>−</mo><msub><mi>k</mi><mi>l</mi></msub><mo>]</mo><mo>[</mo><mi>j</mi><mo>−</mo><msub><mi>k</mi><mi>v</mi></msub><mo>]</mo></mrow><annotation encoding="application/x-tex">dp[i-k_l][j-k_v]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span> 转移即可。</p>
<p>注意边界，为了方便将除了 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>p</mi><mo>[</mo><mn>0</mn><mo>]</mo><mo>[</mo><mn>0</mn><mo>]</mo></mrow><annotation encoding="application/x-tex">dp[0][0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span> 的其他位置都设成 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span> 即可。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>p</mi><mo>[</mo><mn>0</mn><mo>]</mo><mo>[</mo><mn>0</mn><mo>]</mo></mrow><annotation encoding="application/x-tex">dp[0][0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span> 是因为明显覆盖 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 也花费 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 的最大值为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，其他的都可以从转移得来。</p>
<h1 id="代码">代码</h1>
<pre><code class="language-cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;cstring&gt;

using namespace std;
typedef long long ll;
const ll MAXL = 1e3 + 5;
const ll MAXN = 1e4 + 5;
ll n, l, m, dp[MAXL][MAXL];
vector&lt;ll&gt; e[MAXL];
struct node {
    ll l, r, v, w;
} a[MAXN];

int main() {
    scanf(&quot;%lld%lld%lld&quot;, &amp;n, &amp;l, &amp;m);
    for (int i = 1; i &lt;= n; ++i) {
        scanf(&quot;%lld%lld%lld%lld&quot;, &amp;a[i].l, &amp;a[i].r, &amp;a[i].v, &amp;a[i].w);
        e[a[i].r].push_back(i);
    }
    memset(dp, ~0x3f, sizeof(dp));
    dp[0][0] = 0;
    for (int i = 1; i &lt;= l; ++i) {
        for (int j = m; j &gt;= 0; --j) {
            for (int k = 0; k &lt; e[i].size(); ++k) {
                ll num = e[i][k];
                if (j &gt;= a[num].w) {
                    dp[i][j] = max(dp[i][j], dp[a[num].l][j - a[num].w] + a[num].v);
                }
            }
        }
    }
    ll ans = -1;
    for (int i = 0; i &lt;= m; ++i) {
        ans = max(ans, dp[l][i]);
    }
    printf(&quot;%lld\n&quot;, ans);
    return 0;
}
</code></pre>
<h1 id="总结">总结</h1>
<p>在之后的做题中，也要时刻关注数据范围所给的提示，不光是时间复杂度。以后做 dp 时我们定义时要做的就是从最基础的特征表示开始（如 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>p</mi><mo>[</mo><mi>i</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">dp[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span></span></span></span> 表示第 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 个）持续添加必须要有区分度的维度。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[T283563 波浪数]]></title>
        <id>https://tanghg.netlify.app/post/t283563-bo-lang-shu/</id>
        <link href="https://tanghg.netlify.app/post/t283563-bo-lang-shu/">
        </link>
        <updated>2023-05-24T09:13:27.000Z</updated>
        <content type="html"><![CDATA[<h1 id="题目大意">题目大意</h1>
<p>一个正整数是波浪数，当且仅当这个正整数中的<strong>任意</strong>相邻两位数码拥有不同的奇偶性。</p>
<p>现在，给出一个正整数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>，请计算与 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span> 数值最接近的波浪数。答案可能只有一个，也可能会有两个。</p>
<h1 id="思路">思路</h1>
<p>构造+大模拟</p>
<p>我们首先可以发现，所有的可能性无非只有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtext>奇偶奇偶奇</mtext><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\text{奇偶奇偶奇}\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord text"><span class="mord cjk_fallback">奇偶奇偶奇</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span></span></span></span> 或者 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtext>偶奇偶奇偶</mtext><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\text{偶奇偶奇偶}\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord text"><span class="mord cjk_fallback">偶奇偶奇偶</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span></span></span></span> 两种情况。那么都分别尝试构造即可。每一组情况均有往小靠和往大靠两种情况。我们去分类讨论。</p>
<p>之后我们发现，如果一个数之前已经增大/减少了，那么就要往反方向走，因为如果持续增大/减少的话数就会越来越极端。还有一些小细节，比如增大的数现在是奇数结果碰到了 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>9</mn></mrow><annotation encoding="application/x-tex">9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">9</span></span></span></span>，或者减少的数要求偶数现在是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>。但是好像老师没卡。</p>
<p>之后我们就得出了四个数，那么按照之间的距离写一个排序即可。但是减法要写高精度。<strong>字符串反转看错函数了与<code>+'0'</code>写成<code>-'0'</code>了调了半个小时，警钟长鸣。</strong></p>
<p>之后我们判断前两个数与 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 的差是否相等，如果是的话就输出两个数，否则输出一个数。</p>
<h1 id="代码">代码</h1>
<pre><code class="language-cpp">#include &lt;iostream&gt;
#include &lt;algorithm&gt;
#include &lt;cstring&gt;

using namespace std;
typedef long long ll;
const ll MAXN = 1000 + 5;
string n, ans[5];
char a1[MAXN], a2[MAXN];
char c[MAXN];
ll s[MAXN];

void a() {
    ll sz = 0;
    for (int k = 0; k &lt;= 1; ++k) {
        ll K = k;
        memset(a1, 0, sizeof(a1));
        memset(a2, 0, sizeof(a2));
        bool small = false, big = false, big_small = false, small_big = false;
        for (int i = 0; i &lt; n.size(); ++i) {
            if (K) {
                //要求奇数
                if ((n[i] - '0') % 2 == 0) {
                    if (big_small) {
                        a1[i] = '1';
                    } else if (small) {
                        a1[i] = '9';
                    } else {
                        if (n[i] == '0') {
                            big_small = true;
                            a1[i] = '1';
                        } else {
                            small = true;
                            a1[i] = n[i] - 1;
                        }
                    }
                    if (small_big) {
                        a2[i] = '8';
                    } else if (big) {
                        a2[i] = '1';
                    } else {
                        if (n[i] == '9') {
                            a2[i] = '8';
                        } else {
                            big = true;
                            a2[i] = n[i] + 1;
                        }
                    }
                } else {
                    if (big_small) {
                        a1[i] = '1';
                    }
                    if (small) {
                        a1[i] = '9';
                    } else {
                        a1[i] = n[i];
                    }
                    if (small_big) {
                        a2[i] = '8';
                    } else if (big) {
                        a2[i] = '1';
                    } else {
                        a2[i] = n[i];
                    }
                }
            } else {
                if ((n[i] - '0') % 2 == 0) {
                    if (big_small) {
                        a1[i] = '1';
                    }
                    if (small) {
                        a1[i] = '8';
                    } else {
                        a1[i] = n[i];
                    }
                    if (big) {
                        a2[i] = '0';
                    } else {
                        a2[i] = n[i];
                    }
                } else {
                    if (big_small) {
                        a1[i] = '1';
                    }
                    if (small) {
                        a1[i] = '8';
                    } else {
                        small = true;
                        a1[i] = n[i] - 1;
                    }
                    if (small_big) {
                        a2[i] = '8';
                    } else if (big) {
                        a2[i] = '0';
                    } else {
                        if (n[i] == '9') {
                            small_big = true;
                            a2[i] = '8';
                        } else {
                            big = true;
                            a2[i] = n[i] + 1;
                        }
                    }
                }
            }
            K = (K + 1) % 2;
        }
        ans[++sz] = a1;
        ans[++sz] = a2;
    }
}

string sub(string a, string b) {
    memset(c, '\0', sizeof(c));
    if (a.size() &lt; b.size()) {
        swap(a, b);
    } else if (a &lt; b &amp;&amp; a.size() == b.size()) {
        swap(a, b);
    }
    reverse(a.begin(), a.end());
    reverse(b.begin(), b.end());
    for (int i = 0; i &lt; b.size(); ++i) {
        s[i] = a[i] - b[i];
    }
    for (int i = b.size(); i &lt; a.size(); ++i) {
        s[i] = a[i] - '0';
    }
    for (int i = 0; i &lt; a.size(); ++i) {
        if (s[i] &lt; 0) {
            s[i] += 10;
            s[i + 1]--;
        }
    }
    for (int i = 0; i &lt; a.size(); ++i) {
        c[i] = s[i] + '0';
    }
    string S = c;
    reverse(S.begin(), S.end());
    return S;
}

bool cmp(string a, string b) {
    return sub(a, n) &lt; sub(b, n);
}

bool e(string a, string b) {
    return sub(a, n) == sub(b, n);
}

int main() {
    cin &gt;&gt; n;
    a();
    sort(ans + 1, ans + 5, cmp);
    if (e(ans[1], ans[2]) &amp;&amp; ans[1] != ans[2]) {
        cout &lt;&lt; ans[1] &lt;&lt; &quot; &quot; &lt;&lt; ans[2] &lt;&lt; endl;
    } else {
        cout &lt;&lt; ans[1] &lt;&lt; endl;
    }
    return 0;
}
</code></pre>
<h1 id="总结">总结</h1>
<p>像这种要求构造出一个符合条件的数可以多手搓几组例子看一看规律。如果不要求输出符合条件的数而是输出某个值，比如本题波浪数与 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 的差就要多考虑一下 dp 了。但是本题一看就知道要求构造。</p>
<p>还是以不变应万变的思路。本题不变的东西是波浪数每一位的奇偶性。变的就是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 的每一位的奇偶性。那么考虑拼搭即可。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[P1892 [BOI2003]团伙]]></title>
        <id>https://tanghg.netlify.app/post/p1892-boi2003tuan-huo/</id>
        <link href="https://tanghg.netlify.app/post/p1892-boi2003tuan-huo/">
        </link>
        <updated>2023-05-23T10:10:25.000Z</updated>
        <content type="html"><![CDATA[<h1 id="题目大意">题目大意</h1>
<p>现在有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 个人，他们之间有两种关系：朋友和敌人。我们知道：</p>
<ul>
<li>一个人的朋友的朋友是朋友</li>
<li>一个人的敌人的敌人是朋友</li>
</ul>
<p>现在要对这些人进行组团。两个人在一个团体内当且仅当这两个人是朋友。请求出这些人中最多可能有的团体数。</p>
<h1 id="思路">思路</h1>
<p>一种并查集的思路。我们可以发现，每一个人有两种身份，别人的朋友或者别人的敌人。那么就可以分情况讨论。如果是朋友的话不说了，最基本的并查集合并。</p>
<p>如果是敌人，那么我就把我敌人的身份与那个敌人连上。这样之后任何人变成了我的敌人都可以反过来找到我的另外的敌人。也就是 <code>merge(u+n,v);merge(v+n,u)</code>，互为敌人。这样以后如果还有人成了 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">u</span></span></span></span> 的敌人就可以通过 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>u</mi><mo>+</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">u+n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">u</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 找到祖先 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span> 与 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span> 相连。</p>
<h1 id="代码">代码</h1>
<pre><code class="language-cpp">#include &lt;iostream&gt;
#include &lt;algorithm&gt;

using namespace std;
typedef long long ll;
const ll MAXN = 5000 + 5;
ll f[MAXN * 2], n, m;

ll find(ll u) {
    while (u != f[u]) {
        f[u] = f[f[u]];
        u = f[u];
    }
    return u;
}

void merge(ll u, ll v) {
    f[find(u)] = find(v);
}

int main() {
    scanf(&quot;%lld%lld&quot;, &amp;n, &amp;m);
    for (int i = 1; i &lt;= 2 * n; ++i) {
        f[i] = i;
    }
    for (int i = 1; i &lt;= m; ++i) {
        char c;
        cin &gt;&gt; c;
        ll u, v;
        scanf(&quot;%lld%lld&quot;, &amp;u, &amp;v);
        if (c == 'F') {
            merge(u, v);
        } else {
            merge(u + n, v);
            merge(v + n, u);
        }
    }
    ll ans = 0;
    for (int i = 1; i &lt;= n; ++i) {
        if (f[i] == i) {
            ans++;
        }
    }
    printf(&quot;%lld\n&quot;, ans);
    return 0;
}
</code></pre>
<h1 id="总结">总结</h1>
<p>我们可以发现本题中不变的是人，那么变得就是人们之间的关系了。而关系只有两种，那么分别去考虑即可。<br>
也还有带权并查集的做法。由于并查集本身很类似图论，所以可以通过建边的方式去建立两个点之间的关系，传递权值。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[P8226 「Wdoi-5」樱点收集]]></title>
        <id>https://tanghg.netlify.app/post/p8226-wdoi-5-ying-dian-shou-ji/</id>
        <link href="https://tanghg.netlify.app/post/p8226-wdoi-5-ying-dian-shou-ji/">
        </link>
        <updated>2023-05-21T11:29:59.000Z</updated>
        <content type="html"><![CDATA[<h1 id="题目大意">题目大意</h1>
<p>灵梦当前拥有的樱点可以使用一个<strong>变量</strong> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span> 存储，初始时为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>。当樱点在某个瞬间<strong>恰好</strong>变为了 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>，灵梦就会展开樱之结界，同时 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span> 变为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>。</p>
<p>现在她把路程<strong>依次</strong>划分为了 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 个关卡，其中第 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 关上，灵梦一共可以获得 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 点樱点。这些樱点是均匀分布在这关的路程上的。也就是说，随着这段路程的进行，灵梦的樱点个数会依次增加，每次增加 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 个单位（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>←</mo><mi>c</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">c\gets c+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>），恰好在这段路程结束的瞬间会收集到这关中第 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 点樱点。</p>
<p>灵梦提出了 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> 个要求。第 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 个要求 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>b</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">b_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示灵梦希望在第 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>b</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">b_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 段路程结束的瞬间，<strong>恰好</strong>展开樱之结界（如果在这段路程的中途展开但是结束的瞬间没有展开，那就不算达成了要求）。</p>
<p>灵梦可以选择在某个关卡开头放 bomb，<strong>跳过</strong>整个关卡的樱点收集。这样的机会<strong>有且仅有</strong>一次（当然，灵梦可以选择不使用 bomb）。</p>
<p>现在需要求出，在最优的选择下，灵梦<strong>最多</strong>可以达成多少个要求。</p>
<h1 id="思路">思路</h1>
<h2 id="70分">70分</h2>
<p>直接模拟一遍不 bomb 的值，这样就能求出来每一个关卡时 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span> 的值，之后枚举 bomb 的关卡然后直接 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 的答案加上从 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">c_{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span> 开始模拟。</p>
<p>时间复杂度为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mi>n</mi><mn>2</mn></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</p>
<h2 id="100分">100分</h2>
<p>我们从暴力发现，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>(bomb 关卡) 之前的值是不会改变的。那么我们只需要求 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span> 右边的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> 之中的关卡的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mi>i</mi></msub><mo>≡</mo><msub><mi>a</mi><mi>x</mi></msub><mo>(</mo><mtext> </mtext><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mi>k</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">f_i\equiv a_x (\bmod k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span> 即可，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span> 为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span> 的前缀和。</p>
<p>我们记录两个数组 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mo separator="true">,</mo><mi>r</mi></mrow><annotation encoding="application/x-tex">l,r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span> 分别为当前 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span> 的左边与右边在 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> 的区间里 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mi>i</mi></msub><mtext> </mtext><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mi>k</mi></mrow><annotation encoding="application/x-tex">f_i\bmod k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 的个数。那么针对每一个 bomb 的区间的值就是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>l</mi><mn>0</mn></msub><mo>+</mo><msub><mi>r</mi><mrow><msub><mi>a</mi><mi>x</mi></msub><mtext> </mtext><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">l_0+r_{a_x\bmod k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68066em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.3252777777777778em;"></span><span class="mbin mtight"><span class="mord mtight"><span class="mord mathrm mtight">m</span><span class="mord mathrm mtight">o</span><span class="mord mathrm mtight">d</span></span></span><span class="mspace mtight" style="margin-right:0.3252777777777778em;"></span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span></span></span></span>。</p>
<p>我们先正着把 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi></mrow><annotation encoding="application/x-tex">l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span> 求出来，再倒着 bomb，有些类似双指针的思想。我们一旦看到了一个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> 之中的关卡，就把 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>l</mi><mrow><msub><mi>f</mi><mi>i</mi></msub><mtext> </mtext><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mi>k</mi></mrow></msub><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">l_{f_i\bmod k}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.10764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.3252777777777778em;"></span><span class="mbin mtight"><span class="mord mtight"><span class="mord mathrm mtight">m</span><span class="mord mathrm mtight">o</span><span class="mord mathrm mtight">d</span></span></span><span class="mspace mtight" style="margin-right:0.3252777777777778em;"></span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，因为向 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 退了一格自然也是要去掉的。之后我们做计算。然后相反，由于从 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span> 的角度相当于前进了一格，所以要 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">+</span><span class="mord">1</span></span></span></span>。我们不可以先 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">+</span><span class="mord">1</span></span></span></span> 因为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span> 是要在区间后的，还没有计算完毕当然不能前进。</p>
<h1 id="代码">代码</h1>
<pre><code class="language-cpp">#include &lt;iostream&gt;

using namespace std;
typedef long long ll;
const ll MAXN = 3e5 + 5;
ll n, m, k, a[MAXN];
ll f[MAXN], l[MAXN], r[MAXN];
bool ask[MAXN];

int main() {
   scanf(&quot;%lld%lld%lld&quot;, &amp;n, &amp;m, &amp;k);
   for (int i = 1; i &lt;= m; ++i) {
       ll b;
       scanf(&quot;%lld&quot;, &amp;b);
       ask[b] = true;
   }
   for (int i = 1; i &lt;= n; ++i) {
       scanf(&quot;%lld&quot;, &amp;a[i]);
       f[i] = f[i - 1] + a[i];
       if (ask[i]) {
           l[f[i] % k]++;
       }
   }
   ll ans = l[0];
   for (ll i = n; i &gt;= 1; --i) {
       if (ask[i]) {
           l[f[i] % k]--;
       }
       ans = max(ans, l[0] + r[a[i] % k]);
       if (ask[i]) {
           r[f[i] % k]++;
       }
   }
   cout &lt;&lt; ans &lt;&lt; endl;
   return 0;
}
</code></pre>
<h1 id="总结">总结</h1>
<p>这道题目仍然可以从暴力上找规律。本身还是“以不变应万变”的思考方式。先找到题目不变的部分（本题为不 bomb），然后将变化的部分添加进思考中与不变的结论结合通常就可以找到答案了。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[UVA1205 Color a Tree]]></title>
        <id>https://tanghg.netlify.app/post/uva1205-color-a-tree/</id>
        <link href="https://tanghg.netlify.app/post/uva1205-color-a-tree/">
        </link>
        <updated>2023-04-23T03:35:13.000Z</updated>
        <content type="html"><![CDATA[<h1 id="题目大意">题目大意</h1>
<p>有一棵树，需要给其所有节点染色，每个点染色所需的时间是一样的都是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>.给每个点染色，还有一个开销“当前时间<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>×</mo><mi>c</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">×ci</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord">×</span><span class="mord mathdefault">c</span><span class="mord mathdefault">i</span></span></span></span>”，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">ci</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">i</span></span></span></span> 是每个节点的一个权值。(当前时间是染完这个节点的时间) <br>
染色还有另一个约束条件，要染一个点必须要先染好其父节点，所以第一个染的点是根节点. <br>
求最小开销。</p>
<h1 id="思路">思路</h1>
<p>基本上所有的贪心都离不开一个思路——由简到难。本题的难点在于要染一个点必须要先染好其父节点，那么先不考虑这一点去进行思考。在不考虑这一点时明显先选择权值大的先做。这里不做证明，大家都应该会。然后考虑从这个基础上去改。</p>
<p>我们在把基础的考虑完后就可以考虑局部问题了。从上述问题中可以看出本题大概会从权值最大的入手，那么我们不妨设权值最大的节点的父亲已经完成染色，那么<strong>必然先染这个权值最大的节点</strong>。也很明显，就是局部的上述简单问题。那么我们就可以<strong>将这两个点看成一个点了</strong>。设最大的点为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>，它的父亲为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span>，那么我们考虑在局部问题上做计算。那么这个点的话费就是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>+</mo><mn>2</mn><mi>b</mi></mrow><annotation encoding="application/x-tex">a+2b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord mathdefault">b</span></span></span></span> 了。我们考虑这个点与另外一个点 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span> 之间的先后顺序。</p>
<p>当先选择 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">a,b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span></span></span></span> 时花费为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>+</mo><mn>2</mn><mi>b</mi><mo>+</mo><mn>3</mn><mi>c</mi></mrow><annotation encoding="application/x-tex">a+2b+3c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord mathdefault">c</span></span></span></span>，先选择 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span> 的花费为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>+</mo><mn>2</mn><mi>a</mi><mo>+</mo><mn>3</mn><mi>b</mi></mrow><annotation encoding="application/x-tex">c+2a+3b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord mathdefault">b</span></span></span></span>，那我们考虑比较大小。而比较大小最方便的做法就是做差。</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>+</mo><mn>2</mn><mi>b</mi><mo>+</mo><mn>3</mn><mi>c</mi><mo>−</mo><mo>(</mo><mi>c</mi><mo>+</mo><mn>2</mn><mi>a</mi><mo>+</mo><mn>3</mn><mi>b</mi><mo>)</mo><mo>=</mo><mn>2</mn><mi>c</mi><mo>−</mo><mo>(</mo><mi>a</mi><mo>+</mo><mi>b</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">a+2b+3c-(c+2a+3b)=2c-(a+b)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span></span></p>
<p>那么可以看出当 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi>a</mi><mo>+</mo><mi>b</mi></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{a+b}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 比 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span> 大时应先选择前者。这是局部问题，那么我们不妨去扩展到全局。假设现由两组数已经排好了，不妨为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo>⋯</mo><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">a_1,a_2\cdots a_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 与 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>b</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>b</mi><mn>2</mn></msub><mo>⋯</mo><msub><mi>b</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">b_1,b_2\cdots b_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，考虑与上述同样的做法。</p>
<p>若先染 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span>，则花费为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>a</mi><mi>i</mi></msub><mo>×</mo><mi>i</mi><mo>+</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mi>n</mi><mo>+</mo><mn>1</mn></mrow><mrow><mi>n</mi><mo>+</mo><mi>m</mi></mrow></msubsup><msub><mi>b</mi><mi>i</mi></msub><mo>×</mo><mi>i</mi></mrow><annotation encoding="application/x-tex">\sum_{i=1}^{n}a_i\times i+\sum_{i=n+1}^{n+m}b_i\times i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.104002em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.269272em;vertical-align:-0.35804100000000005em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.911231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35804100000000005em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>。</p>
<p>若先染 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>，则花费为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><msub><mi>b</mi><mi>i</mi></msub><mo>×</mo><mi>i</mi><mo>+</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mi>m</mi><mo>+</mo><mn>1</mn></mrow><mrow><mi>m</mi><mo>+</mo><mi>n</mi></mrow></msubsup><msub><mi>a</mi><mi>i</mi></msub><mo>×</mo><mi>i</mi></mrow><annotation encoding="application/x-tex">\sum_{i=1}^{m}b_i\times i+\sum_{i=m+1}^{m+n}a_i\times i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.104002em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.269272em;vertical-align:-0.35804100000000005em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.911231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mathdefault mtight">m</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35804100000000005em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>。</p>
<p>还是做差,能得到这个式子：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>a</mi><mi>i</mi></msub><mo>×</mo><mi>i</mi><mo>+</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mi>n</mi><mo>+</mo><mn>1</mn></mrow><mrow><mi>n</mi><mo>+</mo><mi>m</mi></mrow></munderover><msub><mi>b</mi><mi>i</mi></msub><mo>×</mo><mi>i</mi><mo>−</mo><mo>(</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><msub><mi>b</mi><mi>i</mi></msub><mo>×</mo><mi>i</mi><mo>+</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mi>m</mi><mo>+</mo><mn>1</mn></mrow><mrow><mi>m</mi><mo>+</mo><mi>n</mi></mrow></munderover><msub><mi>a</mi><mi>i</mi></msub><mo>×</mo><mi>i</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">\sum_{i=1}^{n}a_i\times i+\sum_{i=n+1}^{n+m}b_i\times i-(\sum_{i=1}^{m}b_i\times i+\sum_{i=m+1}^{m+n}a_i\times i)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.094336em;vertical-align:-1.336em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7583360000000003em;"><span style="top:-1.8723309999999997em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.094336em;vertical-align:-1.336em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7583360000000003em;"><span style="top:-1.8723309999999997em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mathdefault mtight">m</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">i</span><span class="mclose">)</span></span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>=</mo><mi>n</mi><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><msub><mi>b</mi><mi>i</mi></msub><mo>−</mo><mi>m</mi><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">=n\sum_{i=1}^{m}b_i-m\sum_{i=1}^{n}a_i
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>最后我们发现，当组 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span> 的平均数大于组 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> 的平均数时先选 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span>，反之先选 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>。</p>
<p>然后我们可以通过这个来做了。但是找的方法还是有些困难，我们可以选择增量的方法来解决这道题。</p>
<p>每一次首先按照上述规则找到一个从未被选的节点，然后将它与它的父亲合并，让答案加上父亲的次数乘上当前节点的值。也就是所谓的偏移量。每一次的偏移让这个值能够成功的与父亲合并。最后结束。</p>
<h1 id="代码">代码</h1>
<pre><code class="language-cpp">#include&lt;iostream&gt;
using namespace std;
typedef long long ll;
const ll MAXN=1005;
struct node{
    ll fa,size,sum;
    double avg;
}t[MAXN];
int main() {
    while (true){
        ll n,r;
        scanf(&quot;%lld%lld&quot;,&amp;n,&amp;r);
        if(n==0&amp;&amp;r==0){
            break;
        }
        ll ans=0;
        for (int i = 1; i &lt;=n ; ++i) {
            scanf(&quot;%lld&quot;,&amp;t[i].sum);
            t[i].avg=t[i].sum;
            t[i].size=1;
            ans+=t[i].sum;
        }
        for (int i = 1; i &lt;n ; ++i) {
            ll u,v;
            scanf(&quot;%lld%lld&quot;,&amp;u,&amp;v);
            t[v].fa=u;
        }
        for (int i = 1; i &lt;n ; ++i) {
            double ma=-1;
            ll u;
            for (int j = 1; j &lt;=n ; ++j) {
                if(j!=r&amp;&amp;t[j].avg&gt;ma){
                    ma=t[j].avg;
                    u=j;
                }
            }
            //上面找当前的平均值最大的那个节点。
            ll f=t[u].fa;
            ans+=t[u].sum*t[f].size;//加上偏移量
            for (int j = 1; j &lt;=n ; ++j) {
                if(t[j].fa==u){
                    t[j].fa=f;//由于自己跟父亲合并了，所以自己的节点然要接到父亲底下。
                }
            }
            t[f].sum+=t[u].sum;
            t[f].size+=t[u].size;
            t[f].avg=double(t[f].sum*1.0/t[f].size);
            t[u].avg=-1;//代表选过了
        }
        printf(&quot;%lld\n&quot;,ans);
    }
    return 0;
}
</code></pre>
]]></content>
    </entry>
</feed>